Last login: Wed Jul 30 22:11:48 on console
You have new mail.
bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % sh -c "$(curl -sSfL https://release.solana.com/stable/install)"

curl: (35) LibreSSL SSL_connect: SSL_ERROR_SYSCALL in connection to release.solana.com:443 
bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % brew install solana

==> Auto-updating Homebrew...
Adjust how often this is run with HOMEBREW_AUTO_UPDATE_SECS or disable with
HOMEBREW_NO_AUTO_UPDATE. Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).
Warning: solana 1.18.20 is already installed and up-to-date.
To reinstall 1.18.20, run:
  brew reinstall solana
bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % curl -v https://release.solana.com

* Host release.solana.com:443 was resolved.
* IPv6: (none)
* IPv4: 34.128.128.178
*   Trying 34.128.128.178:443...
* Connected to release.solana.com (34.128.128.178) port 443
* ALPN: curl offers h2,http/1.1
* (304) (OUT), TLS handshake, Client hello (1):
*  CAfile: /etc/ssl/cert.pem
*  CApath: none
* LibreSSL SSL_connect: SSL_ERROR_SYSCALL in connection to release.solana.com:443 
* Closing connection
curl: (35) LibreSSL SSL_connect: SSL_ERROR_SYSCALL in connection to release.solana.com:443 
bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % brew install openssl
brew link --force openssl

openssl@3 3.5.0 is already installed but outdated (so it will be upgraded).
==> Fetching downloads for: openssl@3
==> Downloading https://ghcr.io/v2/homebrew/core/openssl/3/manifests/3.5.1
######################################################################### 100.0%
==> Fetching openssl@3
==> Downloading https://ghcr.io/v2/homebrew/core/openssl/3/blobs/sha256:e14a37b5
######################################################################### 100.0%
==> Upgrading openssl
  3.5.0 -> 3.5.1 
==> Pouring openssl@3--3.5.1.arm64_sequoia.bottle.tar.gz
==> Caveats
A CA file has been bootstrapped using certificates from the system
keychain. To add additional certificates, place .pem files in
  /opt/homebrew/etc/openssl@3/certs

and run
  /opt/homebrew/opt/openssl@3/bin/c_rehash
==> Summary
🍺  /opt/homebrew/Cellar/openssl@3/3.5.1: 7,563 files, 35.4MB
==> Running `brew cleanup openssl@3`...
Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.
Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).
Removing: /opt/homebrew/Cellar/openssl@3/3.5.0... (7,563 files, 35.4MB)
==> No outdated dependents to upgrade!
Warning: Already linked: /opt/homebrew/Cellar/openssl@3/3.5.1
To relink, run:
  brew unlink openssl@3 && brew link openssl@3
bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % mv ~/Downloads/install_blockchain_stack_mac.sh "/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/"

bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % cd "/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/"
chmod +x install_blockchain_stack_mac.sh

bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % ./install_blockchain_stack_mac.sh

🔧 Starting installation of Solana CLI, SPL Token CLI, and Metaplex CLI...
==> Updating Homebrew...
Already up-to-date.
Warning: solana 1.18.20 is already installed and up-to-date.
To reinstall 1.18.20, run:
  brew reinstall solana
solana-cli 1.18.20 (src:00000000; feat:4215500110, client:SolanaLabs)
info: downloading installer
warn: It looks like you have an existing rustup settings file at:
warn: /Users/bfh/.rustup/settings.toml
warn: Rustup will install the default toolchain as specified in the settings file,
warn: instead of the one inferred from the default host triple.

Welcome to Rust!

This will download and install the official compiler for the Rust
programming language, and its package manager, Cargo.

Rustup metadata and toolchains will be installed into the Rustup
home directory, located at:

  /Users/bfh/.rustup

This can be modified with the RUSTUP_HOME environment variable.

The Cargo home directory is located at:

  /Users/bfh/.cargo

This can be modified with the CARGO_HOME environment variable.

The cargo, rustc, rustup and other commands will be added to
Cargo's bin directory, located at:

  /Users/bfh/.cargo/bin

This path will then be added to your PATH environment variable by
modifying the profile files located at:

  /Users/bfh/.profile
  /Users/bfh/.bash_profile
  /Users/bfh/.bashrc
  /Users/bfh/.zshenv

You can uninstall at any time with rustup self uninstall and
these changes will be reverted.

Current installation options:


   default host triple: aarch64-apple-darwin
     default toolchain: stable (default)
               profile: default
  modify PATH variable: yes

1) Proceed with standard installation (default - just press enter)
2) Customize installation
3) Cancel installation
>

info: profile set to 'default'
info: default host triple is aarch64-apple-darwin
warn: Updating existing toolchain, profile choice will be ignored
info: syncing channel updates for 'stable-aarch64-apple-darwin'
info: default toolchain set to 'stable-aarch64-apple-darwin'

  stable-aarch64-apple-darwin unchanged - rustc 1.88.0 (6b00bc388 2025-06-23)


Rust is installed now. Great!

To get started you may need to restart your current shell.
This would reload your PATH environment variable to include
Cargo's bin directory ($HOME/.cargo/bin).

To configure your current shell, you need to source
the corresponding env file under $HOME/.cargo.

This is usually done by running one of the following (note the leading DOT):
. "$HOME/.cargo/env"            # For sh/bash/zsh/ash/dash/pdksh
source "$HOME/.cargo/env.fish"  # For fish
source $"($nu.home-path)/.cargo/env.nu"  # For nushell
    Updating crates.io index
  Downloaded spl-token-cli v5.3.0
  Downloaded 1 crate (124.6KiB) in 1.06s
  Installing spl-token-cli v5.3.0
    Updating crates.io index
     Locking 759 packages to latest compatible versions
      Adding clap v3.2.25 (available: v4.5.42)
      Adding console v0.15.11 (available: v0.16.0)
      Adding curve25519-dalek v3.2.0 (available: v3.2.1)
      Adding solana-sbpf v0.11.1 (available: v0.11.2)
  Downloaded solana-rpc-client-api v2.3.6
  Downloaded kaigan v0.2.6
  Downloaded include_dir_macros v0.7.4
  Downloaded foreign-types-shared v0.1.1
  Downloaded enum-ordinalize v3.1.15
  Downloaded downcast v0.11.0
  Downloaded dir-diff v0.3.3
  Downloaded difflib v0.4.0
  Downloaded solana-sdk-macro v2.2.1
  Downloaded solana-sdk-ids v2.2.1
  Downloaded solana-serde-varint v2.2.2
  Downloaded solana-sha256-hasher v2.3.0
  Downloaded solana-seed-derivable v2.2.1
  Downloaded include_dir v0.7.4
  Downloaded solana-serialize-utils v2.2.1
  Downloaded solana-serde v2.2.1
  Downloaded solana-seed-phrase v2.2.1
  Downloaded solana-slot-history v2.2.1
  Downloaded solana-shred-version v2.2.1
  Downloaded solana-slot-hashes v2.2.1
  Downloaded solana-sysvar-id v2.2.1
  Downloaded solana-system-transaction v2.2.1
  Downloaded solana-svm-feature-set v2.3.6
  Downloaded solana-timings v2.3.6
  Downloaded solana-validator-exit v2.2.1
  Downloaded spl-associated-token-account-client v2.0.0
  Downloaded five8_const v0.1.4
  Downloaded spl-record v0.3.0
  Downloaded spl-discriminator v0.4.1
  Downloaded spl-generic-token v1.0.1
  Downloaded spl-memo v6.0.0
  Downloaded five8_core v0.1.2
  Downloaded solana-short-vec v2.2.1
  Downloaded solana-time-utils v2.2.1
  Downloaded solana-stable-layout v2.2.1
  Downloaded foreign-types v0.3.2
  Downloaded spl-program-error v0.7.0
  Downloaded spl-program-error-derive v0.5.0
  Downloaded spl-discriminator-syn v0.2.0
  Downloaded spl-discriminator-derive v0.2.0
  Downloaded pretty-hex v0.3.0
  Downloaded spl-token-confidential-transfer-proof-generation v0.4.0
  Downloaded solana-svm-callback v2.3.6
  Downloaded solana-tls-utils v2.3.6
  Downloaded solana-svm-transaction v2.3.6
  Downloaded normalize-line-endings v0.3.0
  Downloaded solana-big-mod-exp v2.2.1
  Downloaded solana-address-lookup-table-interface v2.2.2
  Downloaded solana-feature-gate-interface v2.2.2
  Downloaded solana-compute-budget-interface v2.2.2
  Downloaded proc-macro-error-attr2 v2.0.0
  Downloaded solana-sanitize v2.2.1
  Downloaded solana-secp256k1-program v2.2.3
  Downloaded solana-secp256r1-program v2.2.4
  Downloaded solana-signature v2.3.0
  Downloaded openssl-macros v0.1.1
  Downloaded solana-secp256k1-recover v2.2.1
  Downloaded solana-signer v2.2.1
  Downloaded solana-svm-rent-collector v2.3.6
  Downloaded solana-stake-interface v1.2.1
  Downloaded solana-system-interface v1.0.0
  Downloaded solana-zk-elgamal-proof-program v2.3.6
  Downloaded solana-transaction-status-client-types v2.3.6
  Downloaded solana-version v2.3.6
  Downloaded solana-type-overrides v2.3.6
  Downloaded spl-pod v0.5.1
  Downloaded spl-elgamal-registry v0.2.0
  Downloaded spl-token-group-interface v0.6.0
  Downloaded sync_wrapper v1.0.2
  Downloaded symlink v0.1.0
  Downloaded subtle v2.6.1
  Downloaded strum v0.27.2
  Downloaded strum v0.24.1
  Downloaded serde-big-array v0.5.1
  Downloaded solana-transaction-error v2.2.1
  Downloaded spl-token-confidential-transfer-ciphertext-arithmetic v0.3.0
  Downloaded spl-token-confidential-transfer-proof-extraction v0.4.0
  Downloaded solana-vote-interface v2.2.6
  Downloaded solana-transaction-context v2.3.6
  Downloaded strum_macros v0.27.2
  Downloaded spl-token-confidential-transfer-proof-extraction v0.3.0
  Downloaded spl-type-length-value v0.8.0
  Downloaded solana-rpc-client-nonce-utils v2.3.6
  Downloaded solana-msg v2.2.1
  Downloaded solana-loader-v2-interface v2.2.1
  Downloaded solana-transaction-metrics-tracker v2.3.6
  Downloaded spl-elgamal-registry v0.3.0
  Downloaded http-body v1.0.1
  Downloaded unwrap_none v0.1.2
  Downloaded tarpc-plugins v0.12.0
  Downloaded solana-poseidon v2.3.6
  Downloaded solana-borsh v2.2.1
  Downloaded solana-atomic-u64 v2.2.1
  Downloaded solana-fee v2.3.6
  Downloaded solana-account-decoder v2.3.6
  Downloaded solana-presigner v2.2.1
  Downloaded solana-compute-budget-program v2.3.6
  Downloaded solana-example-mocks v2.2.1
  Downloaded solana-lattice-hash v2.3.6
  Downloaded solana-instruction v2.3.0
  Downloaded solana-sdk v2.3.1
  Downloaded solana-vote v2.3.6
  Downloaded solana-sysvar v2.2.2
  Downloaded spl-token-metadata-interface v0.7.0
  Downloaded solana-transaction v2.2.3
  Downloaded strum_macros v0.24.3
  Downloaded spl-transfer-hook-interface v0.10.0
  Downloaded solana-tpu-client v2.3.6
  Downloaded solana-system-program v2.3.6
  Downloaded solana-reward-info v2.2.1
  Downloaded solana-runtime-transaction v2.3.6
  Downloaded solana-zk-token-proof-program v2.3.6
  Downloaded solana-udp-client v2.3.6
  Downloaded solana-program-error v2.2.2
  Downloaded solana-cpi v2.2.1
  Downloaded solana-bn254 v2.2.2
  Downloaded solana-nonce-account v2.2.1
  Downloaded solana-rent-debits v2.2.1
  Downloaded solana-inflation v2.2.1
  Downloaded tower-layer v0.3.3
  Downloaded solana-decode-error v2.3.0
  Downloaded solana-epoch-info v2.2.1
  Downloaded solana-bincode v2.2.1
  Downloaded solana-hard-forks v2.2.1
  Downloaded zstd v0.13.3
  Downloaded solana-last-restart-slot v2.2.1
  Downloaded solana-rpc-client-types v2.3.6
  Downloaded solana-send-transaction-service v2.3.6
  Downloaded solana-transaction-status v2.3.6
  Downloaded solana-unified-scheduler-logic v2.3.6
  Downloaded solana-tpu-client-next v2.3.6
  Downloaded spl-associated-token-account v7.0.0
  Downloaded solana-vote-program v2.3.6
  Downloaded tarpc v0.29.0
  Downloaded tokio-rustls v0.26.2
  Downloaded solana-program-memory v2.3.1
  Downloaded universal-hash v0.5.1
  Downloaded solana-program-pack v2.2.1
  Downloaded solana-program-option v2.2.1
  Downloaded solana-hash v2.3.0
  Downloaded solana-native-token v2.3.0
  Downloaded solana-blake3-hasher v2.2.1
  Downloaded solana-nonce v2.2.1
  Downloaded solana-precompiles v2.2.2
  Downloaded solana-offchain-message v2.2.1
  Downloaded termtree v0.5.1
  Downloaded solana-curve25519 v2.3.6
  Downloaded solana-clock v2.2.2
  Downloaded solana-loader-v4-interface v2.2.1
  Downloaded solana-log-collector v2.3.6
  Downloaded solana-commitment-config v2.2.1
  Downloaded solana-loader-v4-program v2.3.6
  Downloaded solana-precompile-error v2.2.2
  Downloaded solana-cluster-type v2.2.1
  Downloaded solana-config-program-client v0.0.2
  Downloaded solana-bucket-map v2.3.6
  Downloaded solana-instructions-sysvar v2.2.2
  Downloaded solana-fee-structure v2.3.0
  Downloaded spinning_top v0.3.0
  Downloaded spl-tlv-account-resolution v0.10.0
  Downloaded solana-stake-program v2.3.6
  Downloaded solana-keccak-hasher v2.2.1
  Downloaded solana-rayon-threadlimit v2.3.6
  Downloaded solana-epoch-rewards v2.2.1
  Downloaded solana-nohash-hasher v0.2.1
  Downloaded solana-ed25519-program v2.2.3
  Downloaded solana-account-info v2.3.0
  Downloaded solana-measure v2.3.6
  Downloaded ctr v0.9.2
  Downloaded solana-compute-budget v2.3.6
  Downloaded solana-reserved-account-keys v2.2.2
  Downloaded solana-program-entrypoint v2.3.0
  Downloaded solana-epoch-schedule v2.2.1
  Downloaded aead v0.5.2
  Downloaded solana-cost-model v2.3.6
  Downloaded chrono-humanize v0.2.3
  Downloaded agave-reserved-account-keys v2.3.6
  Downloaded solana-clap-utils v2.3.6
  Downloaded solana-epoch-rewards-hasher v2.2.1
  Downloaded solana-quic-definitions v2.3.1
  Downloaded solana-derivation-path v2.2.1
  Downloaded solana-poh-config v2.2.1
  Downloaded solana-thin-client v2.3.6
  Downloaded solana-loader-v3-interface v5.0.0
  Downloaded thiserror-impl v2.0.12
  Downloaded cfg_eval v0.1.2
  Downloaded solana-packet v2.2.1
  Downloaded solana-account-decoder-client-types v2.3.6
  Downloaded solana-connection-cache v2.3.6
  Downloaded thread_local v1.1.9
  Downloaded solana-builtins v2.3.6
  Downloaded event-listener-strategy v0.5.4
  Downloaded spl-token v8.0.0
  Downloaded parking v2.2.1
  Downloaded solana-client-traits v2.2.1
  Downloaded lru v0.7.8
  Downloaded inout v0.1.4
  Downloaded solana-message v2.4.0
  Downloaded solana-compute-budget-instruction v2.3.6
  Downloaded five8 v0.2.1
  Downloaded zeroize v1.8.1
  Downloaded solana-clap-v3-utils v2.3.6
  Downloaded predicates v2.1.5
  Downloaded float-cmp v0.9.0
  Downloaded solana-feature-set v2.2.5
  Downloaded solana-logger v2.3.1
  Downloaded solana-metrics v2.3.6
  Downloaded solana-streamer v2.3.6
  Downloaded solana-rpc-client v2.3.6
  Downloaded nonzero_ext v0.3.0
  Downloaded hash32 v0.3.1
  Downloaded solana-keypair v2.2.3
  Downloaded solana-banks-interface v2.3.6
  Downloaded mockall v0.11.4
  Downloaded lru-slab v0.1.2
  Downloaded solana-rent v2.2.1
  Downloaded solana-rent-collector v2.2.1
  Downloaded tokio-serde v0.8.0
  Downloaded thiserror v2.0.12
  Downloaded solana-net-utils v2.3.6
  Downloaded solana-cli-config v2.3.6
  Downloaded predicates-core v1.0.9
  Downloaded futures-timer v3.0.3
  Downloaded solana-bpf-loader-program v2.3.6
  Downloaded solana-program v2.3.0
  Downloaded solana-builtins-default-costs v2.3.6
  Downloaded solana-banks-server v2.3.6
  Downloaded solana-perf v2.3.6
  Downloaded solana-cli-output v2.3.6
  Downloaded rand_chacha v0.9.0
  Downloaded lz4 v1.28.1
  Downloaded solana-client v2.3.6
  Downloaded fragile v2.0.1
  Downloaded predicates-tree v1.0.12
  Downloaded solana-svm v2.3.6
  Downloaded rand_core v0.9.3
  Downloaded tokio-util v0.6.10
  Downloaded tower v0.5.2
  Downloaded wide v0.7.33
  Downloaded seqlock v0.2.0
  Downloaded tracing-opentelemetry v0.17.4
  Downloaded solana-sbpf v0.11.1
  Downloaded fastbloom v0.9.0
  Downloaded no-std-compat v0.4.1
  Downloaded solana-account v2.2.1
  Downloaded proc-macro-error2 v2.0.1
  Downloaded http-body-util v0.1.3
  Downloaded polyval v0.6.2
  Downloaded spl-token-2022 v8.0.1
  Downloaded bzip2 v0.4.4
  Downloaded agave-transaction-view v2.3.6
  Downloaded agave-precompiles v2.3.6
  Downloaded agave-feature-set v2.3.6
  Downloaded solana-define-syscall v2.3.0
  Downloaded solana-fee-calculator v2.2.1
  Downloaded solana-pubkey v2.4.0
  Downloaded tower-http v0.6.6
  Downloaded solana-genesis-config v2.3.0
  Downloaded spl-token-client v0.16.1
  Downloaded cipher v0.4.4
  Downloaded async-lock v3.4.0
  Downloaded vcpkg v0.2.15
  Downloaded tracing-subscriber v0.3.19
  Downloaded webpki-roots v1.0.2
  Downloaded solana-remote-wallet v2.3.6
  Downloaded spl-token-2022 v9.0.0
  Downloaded quinn-udp v0.5.13
  Downloaded quanta v0.12.6
  Downloaded memmap2 v0.9.7
  Downloaded aes-gcm-siv v0.11.1
  Downloaded solana-runtime v2.3.6
  Downloaded rustc-hash v2.1.1
  Downloaded reqwest-middleware v0.4.2
  Downloaded pin-project-internal v1.1.10
  Downloaded solana-accounts-db v2.3.6
  Downloaded modular-bitfield v0.11.2
  Downloaded hyper-rustls v0.27.7
  Downloaded solana-pubsub-client v2.3.6
  Downloaded solana-quic-client v2.3.6
  Downloaded zstd-safe v7.2.4
  Downloaded core-foundation v0.10.1
  Downloaded educe v0.4.23
  Downloaded pin-project v1.1.10
  Downloaded modular-bitfield-impl v0.11.2
  Downloaded serde_with_macros v3.14.0
  Downloaded signal-hook v0.3.18
  Downloaded event-listener v5.4.0
  Downloaded mockall_derive v0.11.4
  Downloaded rustls-platform-verifier v0.5.3
  Downloaded sharded-slab v0.1.7
  Downloaded openssl-sys v0.9.109
  Downloaded solana-zk-token-sdk v2.3.6
  Downloaded solana-banks-client v2.3.6
  Downloaded solana-program-runtime v2.3.6
  Downloaded solana-zk-sdk v2.3.6
  Downloaded quinn v0.11.8
  Downloaded rustls-pki-types v1.12.0
  Downloaded safe_arch v0.7.4
  Downloaded rand v0.9.2
  Downloaded security-framework v3.2.0
  Downloaded hyper-util v0.1.16
  Downloaded rustls-webpki v0.103.4
  Downloaded aes v0.8.4
  Downloaded http v1.3.1
  Downloaded hidapi v2.6.3
  Downloaded governor v0.6.3
  Downloaded itertools v0.12.1
  Downloaded iri-string v0.7.8
  Downloaded hyper v1.6.0
  Downloaded opentelemetry v0.17.0
  Downloaded serde_with v3.14.0
  Downloaded reqwest v0.12.22
  Downloaded quinn-proto v0.11.12
  Downloaded openssl v0.10.73
  Downloaded curve25519-dalek v4.1.3
  Downloaded rustls v0.23.31
  Downloaded nix v0.30.1
  Downloaded lz4-sys v1.11.1+lz4-1.10.0
  Downloaded solana-program-test v2.3.6
  Downloaded curve25519-dalek v3.2.0
  Downloaded bzip2-sys v0.1.13+1.0.8
  Downloaded aquamarine v0.6.0
  Downloaded openssl-src v300.5.1+3.5.1
  Downloaded 323 crates (29.9MiB) in 44.58s (largest was `openssl-src` at 10.0MiB)
   Compiling proc-macro2 v1.0.95
   Compiling unicode-ident v1.0.18
   Compiling libc v0.2.174
   Compiling cfg-if v1.0.1
   Compiling version_check v0.9.5
   Compiling autocfg v1.5.0
   Compiling serde v1.0.219
   Compiling typenum v1.18.0
   Compiling subtle v2.6.1
   Compiling once_cell v1.21.3
   Compiling zerocopy v0.8.26
   Compiling syn v1.0.109
   Compiling cfg_aliases v0.2.1
   Compiling getrandom v0.3.3
   Compiling equivalent v1.0.2
   Compiling hashbrown v0.15.4
   Compiling toml_datetime v0.6.11
   Compiling winnow v0.7.12
   Compiling generic-array v0.14.7
   Compiling num-traits v0.2.19
   Compiling ahash v0.8.12
   Compiling indexmap v2.10.0
   Compiling borsh v1.5.7
   Compiling toml_edit v0.22.27
   Compiling proc-macro-crate v3.3.0
   Compiling five8_core v0.1.2
   Compiling semver v1.0.26
   Compiling five8 v0.2.1
   Compiling solana-sanitize v2.2.1
   Compiling solana-atomic-u64 v2.2.1
   Compiling five8_const v0.1.4
   Compiling shlex v1.3.0
   Compiling lazy_static v1.5.0
   Compiling memchr v2.7.5
   Compiling getrandom v0.1.16
   Compiling byteorder v1.5.0
   Compiling rustc_version v0.4.1
   Compiling log v0.4.27
   Compiling opaque-debug v0.3.1
   Compiling quote v1.0.40
   Compiling itoa v1.0.15
   Compiling curve25519-dalek v4.1.3
   Compiling bs58 v0.5.1
   Compiling syn v2.0.104
   Compiling solana-decode-error v2.3.0
   Compiling percent-encoding v2.3.1
   Compiling fnv v1.0.7
   Compiling base64 v0.22.1
   Compiling jobserver v0.1.33
   Compiling getrandom v0.2.16
   Compiling cpufeatures v0.2.17
   Compiling block-buffer v0.10.4
   Compiling digest v0.9.0
   Compiling rand_core v0.6.4
   Compiling cc v1.2.30
   Compiling block-buffer v0.9.0
   Compiling signature v1.6.4
   Compiling crypto-common v0.1.6
   Compiling sha2 v0.9.9
   Compiling ed25519 v1.5.3
   Compiling thiserror v2.0.12
   Compiling rand_core v0.5.1
   Compiling ppv-lite86 v0.2.21
   Compiling digest v0.10.7
   Compiling solana-msg v2.2.1
   Compiling ryu v1.0.20
   Compiling either v1.15.0
   Compiling rand_chacha v0.3.1
   Compiling hashbrown v0.13.2
   Compiling sha2 v0.10.9
   Compiling rand_chacha v0.2.2
   Compiling solana-program-memory v2.3.1
   Compiling rand v0.8.5
   Compiling rand v0.7.3
   Compiling pin-project-lite v0.2.16
   Compiling smallvec v1.15.1
   Compiling serde_json v1.0.141
   Compiling arrayref v0.3.9
   Compiling keccak v0.1.5
   Compiling toml v0.5.11
   Compiling lock_api v0.4.13
   Compiling feature-probe v0.1.1
   Compiling scopeguard v1.2.0
   Compiling parking_lot_core v0.9.11
   Compiling bv v0.11.1
   Compiling sha3 v0.10.8
   Compiling blake3 v1.8.2
   Compiling futures-core v0.3.31
   Compiling signal-hook-registry v1.4.5
   Compiling arrayvec v0.7.6
   Compiling proc-macro-crate v0.1.5
   Compiling constant_time_eq v0.3.1
   Compiling pkg-config v0.3.32
   Compiling thiserror v1.0.69
   Compiling derivation-path v0.2.0
   Compiling parking_lot v0.12.4
   Compiling borsh-schema-derive-internal v0.10.4
   Compiling borsh-derive-internal v0.10.4
   Compiling uriparse v0.6.4
   Compiling qstring v0.7.2
   Compiling futures-sink v0.3.31
   Compiling synstructure v0.13.2
   Compiling ring v0.17.14
   Compiling hmac v0.12.1
   Compiling slab v0.4.10
   Compiling stable_deref_trait v1.2.0
   Compiling pbkdf2 v0.11.0
   Compiling mio v1.0.4
   Compiling socket2 v0.6.0
   Compiling crunchy v0.2.4
   Compiling solana-seed-phrase v2.2.1
   Compiling futures-channel v0.3.31
   Compiling crossbeam-utils v0.8.21
   Compiling pin-utils v0.1.0
   Compiling futures-io v0.3.31
   Compiling solana-derivation-path v2.2.1
   Compiling futures-task v0.3.31
   Compiling untrusted v0.9.0
   Compiling solana-seed-derivable v2.2.1
   Compiling crypto-mac v0.8.0
   Compiling hmac v0.8.1
   Compiling writeable v0.6.1
   Compiling litemap v0.8.0
   Compiling icu_properties_data v2.0.1
   Compiling icu_normalizer_data v2.0.0
   Compiling libsecp256k1-core v0.2.2
   Compiling itertools v0.12.1
   Compiling borsh-derive v0.10.4
   Compiling solana-precompile-error v2.2.2
   Compiling num-integer v0.1.46
   Compiling tracing-core v0.1.34
   Compiling serde_derive v1.0.219
   Compiling zeroize_derive v1.4.2
   Compiling bytemuck_derive v1.10.0
   Compiling borsh-derive v1.5.7
   Compiling borsh v0.10.4
   Compiling solana-sdk-macro v2.2.1
   Compiling zeroize v1.8.1
   Compiling thiserror-impl v2.0.12
   Compiling curve25519-dalek v3.2.0
   Compiling displaydoc v0.2.5
   Compiling zerofrom-derive v0.1.6
   Compiling thiserror-impl v1.0.69
   Compiling bytemuck v1.23.1
   Compiling yoke-derive v0.8.0
   Compiling tokio-macros v2.5.0
   Compiling zerovec-derive v0.11.1
   Compiling futures-macro v0.3.31
   Compiling num-derive v0.4.2
   Compiling zerofrom v0.1.6
   Compiling libsecp256k1-gen-genmult v0.2.1
   Compiling libsecp256k1-gen-ecmult v0.2.1
   Compiling tracing-attributes v0.1.30
   Compiling libsecp256k1 v0.6.0
   Compiling rustls-pki-types v1.12.0
   Compiling yoke v0.8.0
   Compiling zerotrie v0.2.2
   Compiling zerovec v0.11.2
   Compiling futures-util v0.3.31
   Compiling hmac-drbg v0.3.0
   Compiling form_urlencoded v1.2.1
   Compiling utf8_iter v1.0.4
   Compiling base64 v0.12.3
   Compiling httparse v1.10.1
   Compiling rustls v0.23.31
   Compiling openssl-src v300.5.1+3.5.1
   Compiling tracing v0.1.41
   Compiling tinystr v0.8.1
   Compiling potential_utf v0.1.2
   Compiling vcpkg v0.2.15
   Compiling icu_collections v2.0.0
   Compiling tower-service v0.3.3
   Compiling icu_locale_core v2.0.0
   Compiling try-lock v0.2.5
   Compiling alloc-no-stdlib v2.0.4
   Compiling crc32fast v1.5.0
   Compiling alloc-stdlib v0.2.2
   Compiling want v0.3.1
   Compiling adler2 v2.0.1
   Compiling brotli-decompressor v5.0.0
   Compiling miniz_oxide v0.8.9
   Compiling sync_wrapper v1.0.2
   Compiling tower-layer v0.3.3
   Compiling openssl-sys v0.9.109
   Compiling icu_provider v2.0.0
   Compiling ipnet v2.11.0
   Compiling solana-hash v2.3.0
   Compiling solana-sha256-hasher v2.3.0
   Compiling bincode v1.3.3
   Compiling bitflags v2.9.1
   Compiling ed25519-dalek v1.0.1
   Compiling serde-big-array v0.5.1
   Compiling solana-signature v2.3.0
   Compiling bytes v1.10.1
   Compiling solana-pubkey v2.4.0
   Compiling solana-short-vec v2.2.1
   Compiling solana-fee-calculator v2.2.1
   Compiling tokio v1.47.0
   Compiling solana-instruction v2.3.0
   Compiling solana-sdk-ids v2.2.1
   Compiling solana-sysvar-id v2.2.1
   Compiling serde_bytes v0.11.17
   Compiling solana-epoch-schedule v2.2.1
   Compiling solana-transaction-error v2.2.1
   Compiling solana-system-interface v1.0.0
   Compiling solana-program-error v2.2.2
   Compiling solana-clock v2.2.2
   Compiling solana-signer v2.2.1
   Compiling solana-account-info v2.3.0
   Compiling solana-serialize-utils v2.2.1
   Compiling solana-cpi v2.2.1
   Compiling solana-instructions-sysvar v2.2.2
   Compiling solana-program-entrypoint v2.3.0
   Compiling solana-bincode v2.2.1
   Compiling solana-slot-hashes v2.2.1
   Compiling solana-rent v2.2.1
   Compiling solana-message v2.4.0
   Compiling solana-stake-interface v1.2.1
   Compiling solana-epoch-rewards v2.2.1
   Compiling solana-slot-history v2.2.1
   Compiling solana-last-restart-slot v2.2.1
   Compiling icu_properties v2.0.1
   Compiling icu_normalizer v2.0.0
   Compiling http v1.3.1
   Compiling solana-feature-set v2.2.5
   Compiling solana-sysvar v2.2.2
   Compiling idna_adapter v1.2.1
   Compiling http-body v1.0.1
   Compiling solana-cluster-type v2.2.1
   Compiling idna v1.0.3
   Compiling openssl v0.10.73
   Compiling foreign-types-shared v0.1.1
   Compiling solana-account v2.2.1
   Compiling foreign-types v0.3.2
   Compiling url v2.5.4
   Compiling brotli v8.0.1
   Compiling flate2 v1.1.2
   Compiling webpki-roots v1.0.2
   Compiling openssl-macros v0.1.1
   Compiling crossbeam-channel v0.5.15
   Compiling iri-string v0.7.8
   Compiling solana-transaction-context v2.3.6
   Compiling http-body-util v0.1.3
   Compiling hyper v1.6.0
   Compiling tower v0.5.2
   Compiling tokio-util v0.7.15
   Compiling serde_urlencoded v0.7.1
   Compiling hyper-util v0.1.16
   Compiling tower-http v0.6.6
   Compiling solana-secp256k1-program v2.2.3
   Compiling solana-ed25519-program v2.2.3
   Compiling num-bigint v0.4.6
   Compiling solana-svm-feature-set v2.3.6
   Compiling solana-time-utils v2.2.1
   Compiling strsim v0.11.1
   Compiling ident_case v1.0.1
   Compiling darling_core v0.20.11
   Compiling ed25519-dalek-bip32 v0.2.0
   Compiling async-compression v0.4.27
   Compiling rustls-webpki v0.103.4
   Compiling solana-keypair v2.2.3
   Compiling solana-native-token v2.3.0
   Compiling core-foundation-sys v0.8.7
   Compiling gethostname v0.2.3
   Compiling cfg_eval v0.1.2
   Compiling solana-serde-varint v2.2.2
   Compiling inout v0.1.4
   Compiling num-bigint v0.2.6
   Compiling solana-measure v2.3.6
   Compiling cipher v0.4.4
   Compiling num-rational v0.2.4
   Compiling darling_macro v0.20.11
   Compiling num-complex v0.2.4
   Compiling solana-program-option v2.2.1
   Compiling agave-feature-set v2.3.6
   Compiling darling v0.20.11
   Compiling serde_with_macros v3.14.0
   Compiling universal-hash v0.5.1
   Compiling polyval v0.6.2
   Compiling ctr v0.9.2
   Compiling aes v0.8.4
   Compiling num-iter v0.1.45
   Compiling aead v0.5.2
   Compiling aes-gcm-siv v0.11.1
   Compiling num v0.2.1
   Compiling solana-stable-layout v2.2.1
   Compiling solana-inflation v2.2.1
   Compiling serde_with v3.14.0
   Compiling merlin v3.0.0
   Compiling memoffset v0.9.1
   Compiling percentage v0.1.0
   Compiling solana-curve25519 v2.3.6
   Compiling aho-corasick v1.1.3
   Compiling regex-syntax v0.8.5
   Compiling solana-packet v2.2.1
   Compiling solana-vote-interface v2.2.6
   Compiling tokio-rustls v0.26.2
   Compiling atty v0.2.14
   Compiling void v1.0.2
   Compiling anyhow v1.0.98
   Compiling unreachable v1.0.0
   Compiling hyper-rustls v0.27.7
   Compiling solana-zk-sdk v2.3.6
   Compiling solana-fee-structure v2.3.0
   Compiling reqwest v0.12.22
   Compiling solana-feature-gate-interface v2.2.2
   Compiling solana-program-pack v2.2.1
   Compiling solana-nonce v2.2.1
   Compiling solana-commitment-config v2.2.1
   Compiling enum-iterator-derive v1.4.0
   Compiling zstd-sys v2.0.15+zstd.1.5.7
   Compiling rustversion v1.0.21
   Compiling ascii v0.9.3
   Compiling regex-automata v0.4.9
   Compiling enum-iterator v1.5.0
   Compiling combine v3.8.1
   Compiling solana-metrics v2.3.6
   Compiling regex v1.11.1
   Compiling iana-time-zone v0.1.63
   Compiling itertools v0.10.5
   Compiling hash32 v0.3.1
   Compiling paste v1.0.15
   Compiling rustc-demangle v0.1.26
   Compiling eager v0.1.0
   Compiling humantime v2.2.0
   Compiling solana-timings v2.3.6
   Compiling solana-sbpf v0.11.1
   Compiling chrono v0.4.41
   Compiling solana-svm-callback v2.3.6
   Compiling futures-executor v0.3.31
   Compiling solana-keccak-hasher v2.2.1
   Compiling ark-serialize-derive v0.4.2
   Compiling ark-std v0.4.0
   Compiling solana-type-overrides v2.3.6
   Compiling solana-log-collector v2.3.6
   Compiling zstd-safe v7.2.4
   Compiling ark-serialize v0.4.2
   Compiling ark-ff-macros v0.4.2
   Compiling solana-big-mod-exp v2.2.1
   Compiling solana-secp256k1-recover v2.2.1
   Compiling solana-loader-v4-interface v2.2.1
   Compiling solana-program-runtime v2.3.6
   Compiling solana-loader-v3-interface v5.0.0
   Compiling solana-blake3-hasher v2.2.1
   Compiling solana-reward-info v2.2.1
   Compiling solana-borsh v2.2.1
   Compiling derivative v2.2.0
   Compiling ark-ff-asm v0.4.2
   Compiling crossbeam-epoch v0.9.18
   Compiling rayon-core v1.12.1
   Compiling termcolor v1.4.1
   Compiling crossbeam-deque v0.8.6
   Compiling solana-address-lookup-table-interface v2.2.2
   Compiling num_enum_derive v0.7.4
   Compiling async-trait v0.1.88
   Compiling ark-ff v0.4.2
   Compiling signal-hook v0.3.18
   Compiling futures v0.3.31
   Compiling spl-generic-token v1.0.1
   Compiling num_enum v0.7.4
   Compiling rayon v1.10.0
   Compiling solana-example-mocks v2.2.1
   Compiling env_logger v0.9.3
   Compiling solana-loader-v2-interface v2.2.1
   Compiling solana-hard-forks v2.2.1
   Compiling solana-shred-version v2.2.1
   Compiling solana-program v2.3.0
   Compiling solana-logger v2.3.1
   Compiling solana-poh-config v2.2.1
   Compiling memmap2 v0.5.10
   Compiling solana-version v2.3.6
   Compiling unicode-width v0.2.1
   Compiling portable-atomic v1.11.1
   Compiling rustix v1.0.8
   Compiling tinyvec_macros v0.1.1
   Compiling tinyvec v1.9.0
   Compiling console v0.15.11
   Compiling ark-poly v0.4.2
   Compiling solana-genesis-config v2.3.0
   Compiling errno v0.3.13
   Compiling spl-pod v0.5.1
   Compiling kaigan v0.2.6
   Compiling ark-ec v0.4.2
   Compiling time-core v0.1.4
   Compiling solana-define-syscall v2.3.0
   Compiling powerfmt v0.2.0
   Compiling unicode-xid v0.2.6
   Compiling minimal-lexical v0.2.1
   Compiling num-conv v0.1.0
   Compiling time-macros v0.2.22
   Compiling nom v7.1.3
   Compiling deranged v0.4.0
   Compiling synstructure v0.12.6
   Compiling solana-config-program-client v0.0.2
   Compiling data-encoding v2.9.0
   Compiling asn1-rs-derive v0.4.0
   Compiling spl-discriminator-syn v0.2.0
   Compiling solana-nonce-account v2.2.1
   Compiling ark-bn254 v0.4.0
   Compiling solana-bn254 v2.2.2
   Compiling light-poseidon v0.2.0
   Compiling rusticata-macros v4.1.0
   Compiling solana-epoch-info v2.2.1
   Compiling qualifier_attr v0.2.2
   Compiling asn1-rs-impl v0.1.0
   Compiling rand_core v0.9.3
   Compiling num_cpus v1.17.0
   Compiling time v0.3.41
   Compiling fastrand v2.3.0
   Compiling solana-rayon-threadlimit v2.3.6
   Compiling tempfile v3.20.0
   Compiling rand_chacha v0.9.0
   Compiling spl-discriminator-derive v0.2.0
   Compiling reqwest-middleware v0.4.2
   Compiling jsonrpc-core v18.0.0
   Compiling core-foundation v0.10.1
   Compiling security-framework-sys v2.14.0
   Compiling rustls-webpki v0.101.7
   Compiling solana-serde v2.2.1
   Compiling safe_arch v0.7.4
   Compiling dlopen2_derive v0.3.0
   Compiling concurrent-queue v2.5.0
   Compiling asn1-rs v0.5.2
   Compiling socket2 v0.5.10
   Compiling nix v0.30.1
   Compiling hashbrown v0.14.5
   Compiling solana-poseidon v2.3.6
   Compiling solana-bpf-loader-program v2.3.6
   Compiling rustls v0.21.12
   Compiling oid-registry v0.6.1
   Compiling solana-perf v2.3.6
   Compiling dashmap v5.5.3
   Compiling dlopen2 v0.5.0
   Compiling wide v0.7.33
   Compiling security-framework v3.2.0
   Compiling spl-discriminator v0.4.1
   Compiling rand v0.9.2
   Compiling sct v0.7.1
   Compiling solana-loader-v4-program v2.3.6
   Compiling ahash v0.7.8
   Compiling quinn-udp v0.5.13
   Compiling number_prefix v0.4.0
   Compiling base64 v0.13.1
   Compiling siphasher v1.0.1
   Compiling static_assertions v1.1.0
   Compiling fastbloom v0.9.0
   Compiling indicatif v0.17.11
   Compiling der-parser v8.2.0
   Compiling solana-system-program v2.3.6
   Compiling solana-stake-program v2.3.6
   Compiling rustls-platform-verifier v0.5.3
   Compiling solana-compute-budget-program v2.3.6
   Compiling solana-quic-definitions v2.3.1
   Compiling quinn v0.11.8
   Compiling lru-slab v0.1.2
   Compiling rustc-hash v2.1.1
   Compiling x509-parser v0.14.0
   Compiling quinn-proto v0.11.12
   Compiling solana-net-utils v2.3.6
   Compiling spl-type-length-value v0.8.0
   Compiling webpki-roots v0.24.0
   Compiling spl-program-error-derive v0.5.0
   Compiling solana-connection-cache v2.3.6
   Compiling solana-compute-budget-interface v2.2.2
   Compiling http v0.2.12
   Compiling pin-project-internal v1.1.10
   Compiling quanta v0.12.6
   Compiling spinning_top v0.3.0
   Compiling sha1 v0.10.6
   Compiling nonzero_ext v0.3.0
   Compiling futures-timer v3.0.3
   Compiling utf-8 v0.7.6
   Compiling no-std-compat v0.4.1
   Compiling event-listener v2.5.3
   Compiling governor v0.6.3
   Compiling pin-project v1.1.10
   Compiling async-channel v1.9.0
   Compiling tungstenite v0.20.1
   Compiling spl-program-error v0.7.0
   Compiling solana-tls-utils v2.3.6
   Compiling hashbrown v0.12.3
   Compiling tokio-rustls v0.24.1
   Compiling solana-transaction-metrics-tracker v2.3.6
   Compiling pem v1.1.1
   Compiling solana-rent-collector v2.2.1
   Compiling solana-compute-budget v2.3.6
   Compiling bzip2-sys v0.1.13+1.0.8
   Compiling lz4-sys v1.11.1+lz4-1.10.0
   Compiling parking v2.2.1
   Compiling histogram v0.6.9
   Compiling webpki-roots v0.25.4
   Compiling tokio-tungstenite v0.20.1
   Compiling solana-streamer v2.3.6
   Compiling event-listener v5.4.0
   Compiling spl-tlv-account-resolution v0.10.0
   Compiling enum-ordinalize v3.1.15
   Compiling zstd v0.13.3
   Compiling solana-zk-token-sdk v2.3.6
   Compiling tokio-stream v0.1.17
   Compiling modular-bitfield-impl v0.11.2
   Compiling solana-account-decoder-client-types v2.3.6
   Compiling hidapi v2.6.3
   Compiling sharded-slab v0.1.7
   Compiling thread_local v1.1.9
   Compiling predicates-core v1.0.9
   Compiling solana-security-txt v1.1.1
   Compiling educe v0.4.23
   Compiling modular-bitfield v0.11.2
   Compiling tracing-subscriber v0.3.19
   Compiling spl-transfer-hook-interface v0.10.0
   Compiling event-listener-strategy v0.5.4
   Compiling opentelemetry v0.17.0
   Compiling spl-token-metadata-interface v0.7.0
   Compiling spl-token-group-interface v0.6.0
   Compiling xattr v1.5.1
   Compiling spl-token-confidential-transfer-proof-extraction v0.3.0
   Compiling spl-token v8.0.0
   Compiling solana-offchain-message v2.2.1
   Compiling spl-token-confidential-transfer-ciphertext-arithmetic v0.3.0
   Compiling spl-token-confidential-transfer-proof-generation v0.4.0
   Compiling solana-rent-debits v2.2.1
   Compiling agave-reserved-account-keys v2.3.6
   Compiling spl-memo v6.0.0
   Compiling memmap2 v0.9.7
   Compiling filetime v0.2.25
   Compiling proc-macro-error-attr2 v2.0.0
   Compiling include_dir_macros v0.7.4
   Compiling float-cmp v0.9.0
   Compiling bitmaps v2.1.0
   Compiling im v15.1.0
   Compiling heck v0.4.1
   Compiling termtree v0.5.1
   Compiling bitflags v1.3.2
   Compiling same-file v1.0.6
   Compiling shell-words v1.1.0
   Compiling normalize-line-endings v0.3.0
   Compiling difflib v0.4.0
   Compiling siphasher v0.3.11
   Compiling dialoguer v0.10.4
   Compiling solana-epoch-rewards-hasher v2.2.1
   Compiling predicates v2.1.5
   Compiling sized-chunks v0.6.5
   Compiling walkdir v2.5.0
   Compiling include_dir v0.7.4
   Compiling predicates-tree v1.0.12
   Compiling proc-macro-error2 v2.0.1
   Compiling strum_macros v0.24.3
   Compiling solana-bucket-map v2.3.6
   Compiling tar v0.4.44
   Compiling lz4 v1.28.1
   Compiling spl-elgamal-registry v0.2.0
   Compiling tracing-opentelemetry v0.17.4
   Compiling tokio-serde v0.8.0
   Compiling async-lock v3.4.0
   Compiling bzip2 v0.4.4
   Compiling solana-svm-rent-collector v2.3.6
   Compiling unicode-normalization v0.1.24
   Compiling solana-zk-elgamal-proof-program v2.3.6
   Compiling mockall_derive v0.11.4
   Compiling solana-lattice-hash v2.3.6
   Compiling tokio-util v0.6.10
   Compiling solana-presigner v2.2.1
   Compiling tarpc-plugins v0.12.0
   Compiling pbkdf2 v0.4.0
   Compiling seqlock v0.2.0
   Compiling rand_xoshiro v0.6.0
   Compiling rtoolbox v0.0.3
   Compiling solana-nohash-hasher v0.2.1
   Compiling fragile v2.0.1
   Compiling downcast v0.11.0
   Compiling unicode-width v0.1.14
   Compiling unwrap_none v0.1.2
   Compiling assert_matches v1.5.0
   Compiling rustc-hash v1.1.0
   Compiling textwrap v0.11.0
   Compiling tiny-bip39 v0.8.2
   Compiling tarpc v0.29.0
   Compiling rpassword v7.4.0
   Compiling solana-remote-wallet v2.3.6
   Compiling spl-token-2022 v8.0.1
   Compiling strum v0.24.1
   Compiling aquamarine v0.6.0
   Compiling dir-diff v0.3.3
   Compiling solana-zk-token-proof-program v2.3.6
   Compiling solana-udp-client v2.3.6
   Compiling lru v0.7.8
   Compiling symlink v0.1.0
   Compiling strsim v0.8.0
   Compiling mockall v0.11.4
   Compiling vec_map v0.8.2
   Compiling ansi_term v0.12.1
   Compiling Inflector v0.11.4
   Compiling spl-associated-token-account-client v2.0.0
   Compiling dirs-sys-next v0.1.2
   Compiling clap v2.34.0
   Compiling indexmap v1.9.3
   Compiling unsafe-libyaml v0.2.11
   Compiling dirs-next v2.0.0
   Compiling spl-token-confidential-transfer-proof-extraction v0.4.0
   Compiling os_str_bytes v6.6.1
   Compiling chrono-humanize v0.2.3
   Compiling spl-elgamal-registry v0.3.0
   Compiling clap_lex v0.2.4
   Compiling solana-reserved-account-keys v2.2.2
   Compiling serde_yaml v0.9.34+deprecated
   Compiling solana-validator-exit v2.2.1
   Compiling pretty-hex v0.3.0
   Compiling textwrap v0.16.2
   Compiling strsim v0.10.0
   Compiling spl-token-2022 v9.0.0
   Compiling spl-token-cli v5.3.0
   Compiling spl-record v0.3.0
   Compiling heck v0.5.0
   Compiling strum_macros v0.27.2
   Compiling strum v0.27.2
   Compiling solana-clap-utils v2.3.6
   Compiling solana-cli-config v2.3.6
   Compiling clap v3.2.25
   Compiling spl-associated-token-account v7.0.0
   Compiling solana-account-decoder v2.3.6
   Compiling solana-clap-v3-utils v2.3.6
   Compiling solana-secp256r1-program v2.2.4
   Compiling solana-precompiles v2.2.2
   Compiling agave-precompiles v2.3.6
   Compiling solana-transaction v2.2.3
   Compiling solana-transaction-status-client-types v2.3.6
   Compiling solana-svm-transaction v2.3.6
   Compiling solana-vote-program v2.3.6
   Compiling solana-client-traits v2.2.1
   Compiling solana-system-transaction v2.2.1
   Compiling solana-banks-interface v2.3.6
   Compiling agave-transaction-view v2.3.6
   Compiling solana-svm v2.3.6
   Compiling solana-fee v2.3.6
   Compiling solana-vote v2.3.6
   Compiling solana-accounts-db v2.3.6
   Compiling solana-sdk v2.3.1
   Compiling solana-builtins-default-costs v2.3.6
   Compiling solana-builtins v2.3.6
   Compiling solana-banks-client v2.3.6
   Compiling solana-compute-budget-instruction v2.3.6
   Compiling solana-rpc-client-types v2.3.6
   Compiling solana-transaction-status v2.3.6
   Compiling solana-runtime-transaction v2.3.6
   Compiling solana-unified-scheduler-logic v2.3.6
   Compiling solana-cost-model v2.3.6
   Compiling solana-rpc-client-api v2.3.6
   Compiling solana-pubsub-client v2.3.6
   Compiling solana-rpc-client v2.3.6
   Compiling solana-quic-client v2.3.6
   Compiling solana-cli-output v2.3.6
   Compiling solana-runtime v2.3.6
   Compiling solana-tpu-client v2.3.6
   Compiling solana-rpc-client-nonce-utils v2.3.6
   Compiling solana-thin-client v2.3.6
   Compiling solana-tpu-client-next v2.3.6
   Compiling solana-client v2.3.6
   Compiling solana-send-transaction-service v2.3.6
   Compiling solana-banks-server v2.3.6
   Compiling solana-program-test v2.3.6
   Compiling spl-token-client v0.16.1
    Finished `release` profile [optimized] target(s) in 2m 43s
   Replacing /Users/bfh/.cargo/bin/spl-token
    Replaced package `spl-token-cli v5.1.0` with `spl-token-cli v5.3.0` (executable `spl-token`)
node 24.3.0 is already installed but outdated (so it will be upgraded).
==> Fetching downloads for: node
==> Downloading https://ghcr.io/v2/homebrew/core/node/manifests/24.4.1-2
curl: (28) Failed to connect to ghcr.io port 443 after 75149 ms: Couldn't connect to server
Warning: Problem : timeout. Will retry in 1 seconds. 3 retries left.
######################################################################### 100.0%
==> Fetching dependencies for node: libnghttp3, ca-certificates, libngtcp2, simdjson, readline and sqlite
==> Downloading https://ghcr.io/v2/homebrew/core/libnghttp3/manifests/1.11.0
######################################################################### 100.0%
==> Fetching libnghttp3
==> Downloading https://ghcr.io/v2/homebrew/core/libnghttp3/blobs/sha256:1c9d28d
######################################################################### 100.0%
==> Downloading https://ghcr.io/v2/homebrew/core/ca-certificates/manifests/2025-
######################################################################### 100.0%
==> Fetching ca-certificates
==> Downloading https://ghcr.io/v2/homebrew/core/ca-certificates/blobs/sha256:84
######################################################################### 100.0%
==> Downloading https://ghcr.io/v2/homebrew/core/libngtcp2/manifests/1.14.0
######################################################################### 100.0%
==> Fetching libngtcp2
==> Downloading https://ghcr.io/v2/homebrew/core/libngtcp2/blobs/sha256:9b415426
######################################################################### 100.0%
==> Downloading https://ghcr.io/v2/homebrew/core/simdjson/manifests/3.13.0
######################################################################### 100.0%
==> Fetching simdjson
==> Downloading https://ghcr.io/v2/homebrew/core/simdjson/blobs/sha256:2d66e9836
######################################################################### 100.0%
==> Downloading https://ghcr.io/v2/homebrew/core/readline/manifests/8.3.1
######################################################################### 100.0%
==> Fetching readline
==> Downloading https://ghcr.io/v2/homebrew/core/readline/blobs/sha256:3afa0c228
######################################################################### 100.0%
==> Downloading https://ghcr.io/v2/homebrew/core/sqlite/manifests/3.50.3
######################################################################### 100.0%
==> Fetching sqlite
==> Downloading https://ghcr.io/v2/homebrew/core/sqlite/blobs/sha256:d5ac21b30a7
######################################################################### 100.0%
==> Fetching node
==> Downloading https://ghcr.io/v2/homebrew/core/node/blobs/sha256:e3b31f9b31a2b
######################################################################### 100.0%
==> Upgrading node
  24.3.0 -> 24.4.1 
==> Installing dependencies for node: libnghttp3, ca-certificates, libngtcp2, simdjson, readline and sqlite
==> Installing node dependency: libnghttp3
==> Downloading https://ghcr.io/v2/homebrew/core/libnghttp3/manifests/1.11.0
Already downloaded: /Users/bfh/Library/Caches/Homebrew/downloads/3efff4f68e2c19db2315e48ca4b115b707b8aaea4c1f6c1576c8df2bb796cb61--libnghttp3-1.11.0.bottle_manifest.json
==> Pouring libnghttp3--1.11.0.arm64_sequoia.bottle.tar.gz
🍺  /opt/homebrew/Cellar/libnghttp3/1.11.0: 20 files, 579.8KB
==> Installing node dependency: ca-certificates
==> Downloading https://ghcr.io/v2/homebrew/core/ca-certificates/manifests/2025-
Already downloaded: /Users/bfh/Library/Caches/Homebrew/downloads/1b8ec93adfe410583ff46788783b030707eec1898c7ded356e25694e4c29aa32--ca-certificates-2025-07-15.bottle_manifest.json
==> Pouring ca-certificates--2025-07-15.all.bottle.tar.gz
==> Regenerating CA certificate bundle from keychain, this may take a while...
🍺  /opt/homebrew/Cellar/ca-certificates/2025-07-15: 4 files, 225.7KB
==> Installing node dependency: libngtcp2
==> Downloading https://ghcr.io/v2/homebrew/core/libngtcp2/manifests/1.14.0
Already downloaded: /Users/bfh/Library/Caches/Homebrew/downloads/fb3258b72e4cdf4e2292d46ab1b20b7c83fbdf6bb5d32ba986388d0c5fc91005--libngtcp2-1.14.0.bottle_manifest.json
==> Pouring libngtcp2--1.14.0.arm64_sequoia.bottle.tar.gz
🍺  /opt/homebrew/Cellar/libngtcp2/1.14.0: 21 files, 1.2MB
==> Installing node dependency: simdjson
==> Downloading https://ghcr.io/v2/homebrew/core/simdjson/manifests/3.13.0
Already downloaded: /Users/bfh/Library/Caches/Homebrew/downloads/02c41c3dcd1d6d8e7fa71de0dbc30f47556872481178358c68a85bf79f14457d--simdjson-3.13.0.bottle_manifest.json
==> Pouring simdjson--3.13.0.arm64_sequoia.bottle.tar.gz
🍺  /opt/homebrew/Cellar/simdjson/3.13.0: 17 files, 5.3MB
==> Installing node dependency: readline
==> Downloading https://ghcr.io/v2/homebrew/core/readline/manifests/8.3.1
Already downloaded: /Users/bfh/Library/Caches/Homebrew/downloads/52cb2bb3f0d9e66789968b865501c41ed80dc303eb488939476b309f1d350dc5--readline-8.3.1.bottle_manifest.json
==> Pouring readline--8.3.1.arm64_sequoia.bottle.tar.gz
🍺  /opt/homebrew/Cellar/readline/8.3.1: 56 files, 2.6MB
==> Installing node dependency: sqlite
==> Downloading https://ghcr.io/v2/homebrew/core/sqlite/manifests/3.50.3
Already downloaded: /Users/bfh/Library/Caches/Homebrew/downloads/caae514078baa0b320054492023cd6f1f3da0e6733ccb13fc00ae274821dc973--sqlite-3.50.3.bottle_manifest.json
==> Pouring sqlite--3.50.3.arm64_sequoia.bottle.tar.gz
🍺  /opt/homebrew/Cellar/sqlite/3.50.3: 13 files, 4.9MB
==> Installing node
==> Pouring node--24.4.1.arm64_sequoia.bottle.2.tar.gz
🍺  /opt/homebrew/Cellar/node/24.4.1: 2,466 files, 96.9MB
==> Running `brew cleanup node`...
Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.
Hide these hints with HOMEBREW_NO_ENV_HINTS (see `man brew`).
Removing: /opt/homebrew/Cellar/node/24.3.0... (2,466 files, 98.7MB)
==> No outdated dependents to upgrade!
npm error code E404
npm error 404 Not Found - GET https://registry.npmjs.org/@metaplex%2fcli - Not found
npm error 404
npm error 404  '@metaplex/cli@*' is not in this registry.
npm error 404
npm error 404 Note that you can also install from a
npm error 404 tarball, folder, http url, or git url.
npm error A complete log of this run can be found in: /Users/bfh/.npm/_logs/2025-07-31T12_35_23_645Z-debug-0.log
spl-token-cli 5.3.0
./install_blockchain_stack_mac.sh: line 31: metaplex: command not found
✅ Installation complete. Solana, SPL Token CLI, and Metaplex are ready to use.
bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % # Install Rust (if not already)
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

# Clone Metaplex CLI repo
git clone https://github.com/metaplex-foundation/js.git metaplex-cli
cd metaplex-cli

# Install dependencies
npm install

# Link CLI tool globally
npm run cli link

zsh: unknown file attribute: i
info: downloading installer
warn: It looks like you have an existing rustup settings file at:
warn: /Users/bfh/.rustup/settings.toml
warn: Rustup will install the default toolchain as specified in the settings file,
warn: instead of the one inferred from the default host triple.

Welcome to Rust!

This will download and install the official compiler for the Rust
programming language, and its package manager, Cargo.

Rustup metadata and toolchains will be installed into the Rustup
home directory, located at:

  /Users/bfh/.rustup

This can be modified with the RUSTUP_HOME environment variable.

The Cargo home directory is located at:

  /Users/bfh/.cargo

This can be modified with the CARGO_HOME environment variable.

The cargo, rustc, rustup and other commands will be added to
Cargo's bin directory, located at:

  /Users/bfh/.cargo/bin

This path will then be added to your PATH environment variable by
modifying the profile files located at:

  /Users/bfh/.profile
  /Users/bfh/.bash_profile
  /Users/bfh/.bashrc
  /Users/bfh/.zshenv

You can uninstall at any time with rustup self uninstall and
these changes will be reverted.

Current installation options:


   default host triple: aarch64-apple-darwin
     default toolchain: stable (default)
               profile: default
  modify PATH variable: yes

1) Proceed with standard installation (default - just press enter)
2) Customize installation
3) Cancel installation
>

info: profile set to 'default'
info: default host triple is aarch64-apple-darwin
warn: Updating existing toolchain, profile choice will be ignored
info: syncing channel updates for 'stable-aarch64-apple-darwin'
info: default toolchain set to 'stable-aarch64-apple-darwin'

  stable-aarch64-apple-darwin unchanged - rustc 1.88.0 (6b00bc388 2025-06-23)


Rust is installed now. Great!

To get started you may need to restart your current shell.
This would reload your PATH environment variable to include
Cargo's bin directory ($HOME/.cargo/bin).

To configure your current shell, you need to source
the corresponding env file under $HOME/.cargo.

This is usually done by running one of the following (note the leading DOT):
. "$HOME/.cargo/env"            # For sh/bash/zsh/ash/dash/pdksh
source "$HOME/.cargo/env.fish"  # For fish
source $"($nu.home-path)/.cargo/env.nu"  # For nushell
zsh: command not found: #
Cloning into 'metaplex-cli'...
remote: Enumerating objects: 31950, done.
remote: Counting objects: 100% (5303/5303), done.
remote: Compressing objects: 100% (380/380), done.
remote: Total 31950 (delta 5084), reused 5088 (delta 4923), pack-reused 26647 (from 1)
Receiving objects: 100% (31950/31950), 23.09 MiB | 1.38 MiB/s, done.
Resolving deltas: 100% (28293/28293), done.
zsh: command not found: #
npm error code EUNSUPPORTEDPROTOCOL
npm error Unsupported URL Type "workspace:": workspace:*
npm error A complete log of this run can be found in: /Users/bfh/.npm/_logs/2025-07-31T12_36_29_717Z-debug-0.log
zsh: command not found: #
npm error Missing script: "cli"
npm error
npm error Did you mean this?
npm error   npm ci # Clean install a project
npm error
npm error To see a list of scripts, run:
npm error   npm run
npm error A complete log of this run can be found in: /Users/bfh/.npm/_logs/2025-07-31T12_37_13_334Z-debug-0.log
bfh@BFHs-MacBook-Pro:metaplex-cli % curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
source $HOME/.cargo/env

info: downloading installer
warn: It looks like you have an existing rustup settings file at:
warn: /Users/bfh/.rustup/settings.toml
warn: Rustup will install the default toolchain as specified in the settings file,
warn: instead of the one inferred from the default host triple.

Welcome to Rust!

This will download and install the official compiler for the Rust
programming language, and its package manager, Cargo.

Rustup metadata and toolchains will be installed into the Rustup
home directory, located at:

  /Users/bfh/.rustup

This can be modified with the RUSTUP_HOME environment variable.

The Cargo home directory is located at:

  /Users/bfh/.cargo

This can be modified with the CARGO_HOME environment variable.

The cargo, rustc, rustup and other commands will be added to
Cargo's bin directory, located at:

  /Users/bfh/.cargo/bin

This path will then be added to your PATH environment variable by
modifying the profile files located at:

  /Users/bfh/.profile
  /Users/bfh/.bash_profile
  /Users/bfh/.bashrc
  /Users/bfh/.zshenv

You can uninstall at any time with rustup self uninstall and
these changes will be reverted.

Current installation options:


   default host triple: aarch64-apple-darwin
     default toolchain: stable (default)
               profile: default
  modify PATH variable: yes

1) Proceed with standard installation (default - just press enter)
2) Customize installation
3) Cancel installation
>

info: profile set to 'default'
info: default host triple is aarch64-apple-darwin
warn: Updating existing toolchain, profile choice will be ignored
info: syncing channel updates for 'stable-aarch64-apple-darwin'
info: default toolchain set to 'stable-aarch64-apple-darwin'

  stable-aarch64-apple-darwin unchanged - rustc 1.88.0 (6b00bc388 2025-06-23)


Rust is installed now. Great!

To get started you may need to restart your current shell.
This would reload your PATH environment variable to include
Cargo's bin directory ($HOME/.cargo/bin).

To configure your current shell, you need to source
the corresponding env file under $HOME/.cargo.

This is usually done by running one of the following (note the leading DOT):
. "$HOME/.cargo/env"            # For sh/bash/zsh/ash/dash/pdksh
source "$HOME/.cargo/env.fish"  # For fish
source $"($nu.home-path)/.cargo/env.nu"  # For nushell
bfh@BFHs-MacBook-Pro:metaplex-cli % git clone https://github.com/metaplex-foundation/metaplex.git
cd metaplex/cli

Cloning into 'metaplex'...
remote: Enumerating objects: 17319, done.
remote: Total 17319 (delta 0), reused 0 (delta 0), pack-reused 17319 (from 1)
Receiving objects: 100% (17319/17319), 26.47 MiB | 1.25 MiB/s, done.
Resolving deltas: 100% (10799/10799), done.
cd: no such file or directory: metaplex/cli
bfh@BFHs-MacBook-Pro:metaplex-cli % cargo build --release

error: could not find `Cargo.toml` in `/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/metaplex-cli` or any parent directory
bfh@BFHs-MacBook-Pro:metaplex-cli % cd "~/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/"

cd: no such file or directory: ~/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/
bfh@BFHs-MacBook-Pro:metaplex-cli % cd "~/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/"

cd: no such file or directory: ~/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/
bfh@BFHs-MacBook-Pro:metaplex-cli % rm -rf metaplex-cli

bfh@BFHs-MacBook-Pro:metaplex-cli % git clone https://github.com/metaplex-foundation/metaplex.git
cd metaplex/cli

fatal: destination path 'metaplex' already exists and is not an empty directory.
cd: no such file or directory: metaplex/cli
bfh@BFHs-MacBook-Pro:metaplex-cli % cd ~/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My\ Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/ 

bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % rm -rf metaplex

bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % git clone https://github.com/metaplex-foundation/metaplex.git
cd metaplex/cli
cargo build --release

Cloning into 'metaplex'...
remote: Enumerating objects: 17319, done.
remote: Total 17319 (delta 0), reused 0 (delta 0), pack-reused 17319 (from 1)
Receiving objects: 100% (17319/17319), 26.47 MiB | 301.00 KiB/s, done.
Resolving deltas: 100% (10799/10799), done.
cd: no such file or directory: metaplex/cli
error: could not find `Cargo.toml` in `/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain` or any parent directory
bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % cd metaplex

bfh@BFHs-MacBook-Pro:metaplex % git branch -r

  origin/HEAD -> origin/master
  origin/airdrop
  origin/master
bfh@BFHs-MacBook-Pro:metaplex % cd ~/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My\ Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/

bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % rm -rf metaplex

bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % git clone https://github.com/metaplex-foundation/candy-machine-cli.git
cd candy-machine-cli

Cloning into 'candy-machine-cli'...
remote: Repository not found.
fatal: repository 'https://github.com/metaplex-foundation/candy-machine-cli.git/' not found
cd: no such file or directory: candy-machine-cli
bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % solana config set --url mainnet-beta

Config File: /Users/bfh/.config/solana/cli/config.yml
RPC URL: https://api.mainnet-beta.solana.com 
WebSocket URL: wss://api.mainnet-beta.solana.com/ (computed)
Keypair Path: /Users/bfh/iTek-Lux-TrustChain-Sovereign-Blockchain/id.json 
Commitment: confirmed 
bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % ~/.config/solana/id.json

zsh: permission denied: /Users/bfh/.config/solana/id.json
bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % cat ~/.config/solana/id.json

[166,68,139,209,76,9,112,150,121,71,66,92,160,87,99,144,252,254,3,204,6,152,187,204,35,218,103,176,37,102,54,98,40,121,150,244,166,0,240,14,215,126,169,204,205,192,19,103,53,73,204,16,34,253,98,13,78,247,71,2,4,85,155,143]%                 bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % solana address

3izqrwVEfQpvxPmimpgBfqVVuWGrfJkxuSih6PXuo4zA
bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % chmod 400 ~/.config/solana/id.json

bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % cargo install metaboss

    Updating crates.io index
  Downloaded metaboss v0.44.0
  Downloaded 1 crate (1.5MiB) in 23.31s
  Installing metaboss v0.44.0
    Updating crates.io index
error: failed to compile `metaboss v0.44.0`, intermediate artifacts can be found at `/var/folders/7_/zqhnfxfn6wsb9pm3qv930d700000gn/T/cargo-installfU2Z7T`.
To reuse those artifacts with a future compilation, set the environment variable `CARGO_TARGET_DIR` to that path.

Caused by:
  failed to select a version for the requirement `solana_rbpf = "=0.8.0"`
    version 0.8.0 is yanked
  location searched: crates.io index
  required by package `solana-program-runtime v1.17.29`
      ... which satisfies dependency `solana-program-runtime = "=1.17.29"` of package `solana-config-program v1.17.29`
      ... which satisfies dependency `solana-config-program = "=1.17.29"` of package `solana-account-decoder v1.17.29`
      ... which satisfies dependency `solana-account-decoder = "~1.17.29"` of package `metaboss v0.44.0`
bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % metaboss create metadata \
  --keypair ~/.config/solana/id.json \
  --mint-address <YOUR_NFT_MINT_ADDRESS> \
  --uri https://ipfs.io/ipfs/QmSjmKW7is3qdpbev4TUyiquJWXahKekyzrSGq4fsxWdoi \
  --name "TrustChain Capsule NFT" \
  --symbol "TCVERI" \
  --seller-fee-basis-points 0 \
  --creators 3izqrwVEfQpvxPmimpgBfqVVuWGrfJkxuSih6PXuo4zA:100

zsh: no such file or directory: YOUR_NFT_MINT_ADDRESS
bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % spl-token create-token --decimals 0

Creating token GKWPEPNZyiS7vSgdzFKk76UoJa8XvM9SEA2ysd2DMaie under program TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA

Address:  GKWPEPNZyiS7vSgdzFKk76UoJa8XvM9SEA2ysd2DMaie
Decimals:  0

Signature: 27iAHYVz8HJePXSbtUnRxPim2KTC2e4FpszK18X1zB76BcAofMJaEoKR9HvuK838LMNueeaM8WBtsRPjLL3JGynL

bfh@BFHs-MacBook-Pro:iTek-Lux-TrustChain-Sovereign-Blockchain % cargo new trustchain_nft_anchor
cd trustchain_nft_anchor

    Creating binary (application) `trustchain_nft_anchor` package
note: see more `Cargo.toml` keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
bfh@BFHs-MacBook-Pro:trustchain_nft_anchor % cargo build --release

   Compiling trustchain_nft_anchor v0.1.0 (/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor)
    Finished `release` profile [optimized] target(s) in 0.48s
bfh@BFHs-MacBook-Pro:trustchain_nft_anchor % cargo run --release

    Finished `release` profile [optimized] target(s) in 0.05s
     Running `target/release/trustchain_nft_anchor`
Hello, world!
bfh@BFHs-MacBook-Pro:trustchain_nft_anchor % cd ~/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My\ Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor

bfh@BFHs-MacBook-Pro:trustchain_nft_anchor % nano src/main.rs

bfh@BFHs-MacBook-Pro:trustchain_nft_anchor % cargo run --release

   Compiling trustchain_nft_anchor v0.1.0 (/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor)
error: this file contains an unclosed delimiter
  --> src/main.rs:58:2
   |
9  | fn main() -> Result<()> {
   |                         - unclosed delimiter
...
57 |     let signature = client.send_and_confirm_transaction(_
   |                                                        - unclosed delimiter
58 |
   | ^

error: could not compile `trustchain_nft_anchor` (bin "trustchain_nft_anchor") due to 1 previous error
bfh@BFHs-MacBook-Pro:trustchain_nft_anchor % nano src/main.rs

bfh@BFHs-MacBook-Pro:trustchain_nft_anchor % cargo run --release

   Compiling trustchain_nft_anchor v0.1.0 (/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor)
error[E0433]: failed to resolve: use of unresolved module or unlinked crate `anchor_lang`
 --> src/main.rs:3:5
  |
3 | use anchor_lang::prelude::*;
  |     ^^^^^^^^^^^ use of unresolved module or unlinked crate `anchor_lang`
  |
  = help: if you wanted to use a crate named `anchor_lang`, use `cargo add anchor_lang` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `anchor_client`
 --> src/main.rs:2:5
  |
2 | use anchor_client::solana_sdk::pubkey::Pubkey;
  |     ^^^^^^^^^^^^^ use of unresolved module or unlinked crate `anchor_client`
  |
  = help: if you wanted to use a crate named `anchor_client`, use `cargo add anchor_client` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `mpl_token_metadata`
 --> src/main.rs:4:5
  |
4 | use mpl_token_metadata::instruction::create_metadata_accounts_v2;
  |     ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `mpl_token_metadata`
  |
  = help: if you wanted to use a crate named `mpl_token_metadata`, use `cargo add mpl_token_metadata` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `solana_client`
 --> src/main.rs:5:5
  |
5 | use solana_client::rpc_client::RpcClient;
  |     ^^^^^^^^^^^^^ use of unresolved module or unlinked crate `solana_client`
  |
  = help: if you wanted to use a crate named `solana_client`, use `cargo add solana_client` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `solana_sdk`
 --> src/main.rs:6:5
  |
6 | use solana_sdk::signature::{Keypair, read_keypair_file, Signer};
  |     ^^^^^^^^^^ use of unresolved module or unlinked crate `solana_sdk`
  |
  = help: if you wanted to use a crate named `solana_sdk`, use `cargo add solana_sdk` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `solana_sdk`
 --> src/main.rs:7:5
  |
7 | use solana_sdk::transaction::Transaction;
  |     ^^^^^^^^^^ use of unresolved module or unlinked crate `solana_sdk`
  |
  = help: if you wanted to use a crate named `solana_sdk`, use `cargo add solana_sdk` to add it to your `Cargo.toml`

error[E0432]: unresolved imports `anchor_client::solana_sdk::pubkey::Pubkey`, `mpl_token_metadata::instruction::create_metadata_accounts_v2`, `solana_client::rpc_client::RpcClient`, `solana_sdk::signature::Keypair`, `solana_sdk::signature::read_keypair_file`, `solana_sdk::signature::Signer`, `solana_sdk::transaction::Transaction`
 --> src/main.rs:2:5
  |
2 | use anchor_client::solana_sdk::pubkey::Pubkey;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
3 | use anchor_lang::prelude::*;
4 | use mpl_token_metadata::instruction::create_metadata_accounts_v2;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
5 | use solana_client::rpc_client::RpcClient;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
6 | use solana_sdk::signature::{Keypair, read_keypair_file, Signer};
  |                             ^^^^^^^  ^^^^^^^^^^^^^^^^^  ^^^^^^
7 | use solana_sdk::transaction::Transaction;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `mpl_token_metadata`
  --> src/main.rs:28:9
   |
28 |         mpl_token_metadata::state::Creator {
   |         ^^^^^^^^^^^^^^^^^^ use of unresolved module or unlinked crate `mpl_token_metadata`
   |
   = help: if you wanted to use a crate named `mpl_token_metadata`, use `cargo add mpl_token_metadata` to add it to your `Cargo.toml`

warning: unused import: `std::str::FromStr`
 --> src/main.rs:8:5
  |
8 | use std::str::FromStr;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

error[E0107]: enum takes 2 generic arguments but 1 generic argument was supplied
  --> src/main.rs:10:14
   |
10 | fn main() -> Result<()> {
   |              ^^^^^^ -- supplied 1 generic argument
   |              |
   |              expected 2 generic arguments
   |
help: add missing generic argument
   |
10 | fn main() -> Result<(), E> {
   |                       +++

Some errors have detailed explanations: E0107, E0432, E0433.
For more information about an error, try `rustc --explain E0107`.
warning: `trustchain_nft_anchor` (bin "trustchain_nft_anchor") generated 1 warning
error: could not compile `trustchain_nft_anchor` (bin "trustchain_nft_anchor") due to 9 previous errors; 1 warning emitted
bfh@BFHs-MacBook-Pro:trustchain_nft_anchor % nano Cargo.toml

bfh@BFHs-MacBook-Pro:trustchain_nft_anchor % cd ~/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My\ Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor
nano Cargo.toml

bfh@BFHs-MacBook-Pro:trustchain_nft_anchor % nano src/main.rs

bfh@BFHs-MacBook-Pro:trustchain_nft_anchor % cargo build --release
cargo run --release

    Updating crates.io index
     Locking 544 packages to latest compatible versions
      Adding Inflector v0.11.4
      Adding addr2line v0.24.2
      Adding adler2 v2.0.1
      Adding aead v0.4.3
      Adding aes v0.7.5
      Adding aes-gcm-siv v0.10.3
      Adding ahash v0.7.8
      Adding ahash v0.8.12
      Adding aho-corasick v1.1.3
      Adding alloc-no-stdlib v2.0.4
      Adding alloc-stdlib v0.2.2
      Adding anchor-attribute-access-control v0.27.0
      Adding anchor-attribute-account v0.27.0
      Adding anchor-attribute-constant v0.27.0
      Adding anchor-attribute-error v0.27.0
      Adding anchor-attribute-event v0.27.0
      Adding anchor-attribute-program v0.27.0
      Adding anchor-client v0.27.0 (available: v0.31.1)
      Adding anchor-derive-accounts v0.27.0
      Adding anchor-derive-space v0.27.0
      Adding anchor-lang v0.27.0 (available: v0.31.1)
      Adding anchor-syn v0.27.0
      Adding android-tzdata v0.1.1
      Adding android_system_properties v0.1.5
      Adding ansi_term v0.12.1
      Adding anyhow v1.0.98
      Adding ark-bn254 v0.4.0
      Adding ark-ec v0.4.2
      Adding ark-ff v0.4.2
      Adding ark-ff-asm v0.4.2
      Adding ark-ff-macros v0.4.2
      Adding ark-poly v0.4.2
      Adding ark-serialize v0.4.2
      Adding ark-serialize-derive v0.4.2
      Adding ark-std v0.4.0
      Adding arrayref v0.3.9
      Adding arrayvec v0.7.6
      Adding ascii v0.9.3
      Adding asn1-rs v0.5.2
      Adding asn1-rs-derive v0.4.0
      Adding asn1-rs-impl v0.1.0
      Adding assert_matches v1.5.0
      Adding async-channel v1.9.0
      Adding async-compression v0.4.27
      Adding async-mutex v1.4.1
      Adding async-trait v0.1.88
      Adding atty v0.2.14
      Adding autocfg v1.5.0
      Adding backtrace v0.3.75
      Adding base64 v0.12.3
      Adding base64 v0.13.1
      Adding base64 v0.21.7
      Adding base64ct v1.8.0
      Adding bincode v1.3.3
      Adding bitflags v1.3.2
      Adding bitflags v2.9.1
      Adding bitmaps v2.1.0
      Adding blake3 v1.8.2
      Adding block-buffer v0.9.0
      Adding block-buffer v0.10.4
      Adding block-padding v0.2.1
      Adding borsh v0.9.3
      Adding borsh v0.10.4
      Adding borsh v1.5.7
      Adding borsh-derive v0.9.3
      Adding borsh-derive v0.10.4
      Adding borsh-derive v1.5.7
      Adding borsh-derive-internal v0.9.3
      Adding borsh-derive-internal v0.10.4
      Adding borsh-schema-derive-internal v0.9.3
      Adding borsh-schema-derive-internal v0.10.4
      Adding brotli v8.0.1
      Adding brotli-decompressor v5.0.0
      Adding bs58 v0.3.1
      Adding bs58 v0.4.0
      Adding bumpalo v3.19.0
      Adding bv v0.11.1
      Adding bytemuck v1.23.1
      Adding bytemuck_derive v1.10.0
      Adding byteorder v1.5.0
      Adding bytes v1.10.1
      Adding caps v0.5.5
      Adding cc v1.2.30
      Adding cfg-if v1.0.1
      Adding cfg_aliases v0.2.1
      Adding chrono v0.4.41
      Adding cipher v0.3.0
      Adding clap v2.34.0
      Adding clap v3.2.25
      Adding clap_lex v0.2.4
      Adding combine v3.8.1
      Adding concurrent-queue v2.5.0
      Adding console v0.15.11
      Adding console_error_panic_hook v0.1.7
      Adding console_log v0.2.2
      Adding const-oid v0.7.1
      Adding constant_time_eq v0.3.1
      Adding core-foundation v0.9.4
      Adding core-foundation-sys v0.8.7
      Adding cpufeatures v0.2.17
      Adding crc32fast v1.5.0
      Adding crossbeam-channel v0.5.15
      Adding crossbeam-deque v0.8.6
      Adding crossbeam-epoch v0.9.18
      Adding crossbeam-utils v0.8.21
      Adding crunchy v0.2.4
      Adding crypto-common v0.1.6
      Adding crypto-mac v0.8.0
      Adding ctr v0.8.0
      Adding curve25519-dalek v3.2.1
      Adding darling v0.20.11
      Adding darling_core v0.20.11
      Adding darling_macro v0.20.11
      Adding dashmap v5.5.3
      Adding data-encoding v2.9.0
      Adding der v0.5.1
      Adding der-parser v8.2.0
      Adding deranged v0.4.0
      Adding derivation-path v0.2.0
      Adding derivative v2.2.0
      Adding dialoguer v0.10.4
      Adding digest v0.9.0
      Adding digest v0.10.7
      Adding displaydoc v0.2.5
      Adding dlopen2 v0.5.0
      Adding dlopen2_derive v0.3.0
      Adding eager v0.1.0
      Adding ed25519 v1.5.3
      Adding ed25519-dalek v1.0.1
      Adding ed25519-dalek-bip32 v0.2.0
      Adding either v1.15.0
      Adding encode_unicode v1.0.0
      Adding encoding_rs v0.8.35
      Adding enum-iterator v1.5.0
      Adding enum-iterator-derive v1.4.0
      Adding env_logger v0.9.3
      Adding equivalent v1.0.2
      Adding errno v0.3.13
      Adding event-listener v2.5.3
      Adding fastrand v2.3.0
      Adding feature-probe v0.1.1
      Adding flate2 v1.1.2
      Adding fnv v1.0.7
      Adding form_urlencoded v1.2.1
      Adding futures v0.3.31
      Adding futures-channel v0.3.31
      Adding futures-core v0.3.31
      Adding futures-executor v0.3.31
      Adding futures-io v0.3.31
      Adding futures-macro v0.3.31
      Adding futures-sink v0.3.31
      Adding futures-task v0.3.31
      Adding futures-util v0.3.31
      Adding generic-array v0.14.7
      Adding gethostname v0.2.3
      Adding getrandom v0.1.16
      Adding getrandom v0.2.16
      Adding getrandom v0.3.3
      Adding gimli v0.31.1
      Adding goblin v0.5.4
      Adding h2 v0.3.27
      Adding hash32 v0.2.1
      Adding hashbrown v0.11.2
      Adding hashbrown v0.12.3
      Adding hashbrown v0.13.2
      Adding hashbrown v0.14.5
      Adding hashbrown v0.15.4
      Adding heck v0.3.3
      Adding hermit-abi v0.1.19
      Adding hermit-abi v0.5.2
      Adding histogram v0.6.9
      Adding hmac v0.8.1
      Adding hmac v0.12.1
      Adding hmac-drbg v0.3.0
      Adding http v0.2.12
      Adding http-body v0.4.6
      Adding httparse v1.10.1
      Adding httpdate v1.0.3
      Adding humantime v2.2.0
      Adding hyper v0.14.32
      Adding hyper-rustls v0.24.2
      Adding iana-time-zone v0.1.63
      Adding iana-time-zone-haiku v0.1.2
      Adding icu_collections v2.0.0
      Adding icu_locale_core v2.0.0
      Adding icu_normalizer v2.0.0
      Adding icu_normalizer_data v2.0.0
      Adding icu_properties v2.0.1
      Adding icu_properties_data v2.0.1
      Adding icu_provider v2.0.0
      Adding ident_case v1.0.1
      Adding idna v1.0.3
      Adding idna_adapter v1.2.1
      Adding im v15.1.0
      Adding indexmap v1.9.3
      Adding indexmap v2.10.0
      Adding indicatif v0.17.11
      Adding io-uring v0.7.9
      Adding ipnet v2.11.0
      Adding itertools v0.10.5
      Adding itoa v1.0.15
      Adding jobserver v0.1.33
      Adding js-sys v0.3.77
      Adding jsonrpc-core v18.0.0
      Adding keccak v0.1.5
      Adding lazy_static v1.5.0
      Adding libc v0.2.174
      Adding libsecp256k1 v0.6.0
      Adding libsecp256k1-core v0.2.2
      Adding libsecp256k1-gen-ecmult v0.2.1
      Adding libsecp256k1-gen-genmult v0.2.1
      Adding light-poseidon v0.2.0
      Adding linux-raw-sys v0.9.4
      Adding litemap v0.8.0
      Adding lock_api v0.4.13
      Adding log v0.4.27
      Adding memchr v2.7.5
      Adding memmap2 v0.5.10
      Adding memoffset v0.7.1
      Adding memoffset v0.9.1
      Adding merlin v3.0.0
      Adding mime v0.3.17
      Adding minimal-lexical v0.2.1
      Adding miniz_oxide v0.8.9
      Adding mio v1.0.4
      Adding mpl-token-auth-rules v1.5.1
      Adding mpl-token-metadata v1.13.1 (available: v1.13.2)
      Adding mpl-token-metadata-context-derive v0.2.1
      Adding mpl-token-metadata-context-derive v0.3.0
      Adding mpl-utils v0.2.0
      Adding nix v0.26.4
      Adding nom v7.1.3
      Adding num v0.2.1
      Adding num-bigint v0.2.6
      Adding num-bigint v0.4.6
      Adding num-complex v0.2.4
      Adding num-conv v0.1.0
      Adding num-derive v0.3.3
      Adding num-derive v0.4.2
      Adding num-integer v0.1.46
      Adding num-iter v0.1.45
      Adding num-rational v0.2.4
      Adding num-traits v0.2.19
      Adding num_cpus v1.17.0
      Adding num_enum v0.5.11
      Adding num_enum v0.6.1
      Adding num_enum v0.7.4
      Adding num_enum_derive v0.5.11
      Adding num_enum_derive v0.6.1
      Adding num_enum_derive v0.7.4
      Adding number_prefix v0.4.0
      Adding object v0.36.7
      Adding oid-registry v0.6.1
      Adding once_cell v1.21.3
      Adding opaque-debug v0.3.1
      Adding openssl-probe v0.1.6
      Adding os_str_bytes v6.6.1
      Adding parking_lot v0.12.4
      Adding parking_lot_core v0.9.11
      Adding paste v1.0.15
      Adding pbkdf2 v0.4.0
      Adding pbkdf2 v0.11.0
      Adding pem v1.1.1
      Adding percent-encoding v2.3.1
      Adding percentage v0.1.0
      Adding pin-project-lite v0.2.16
      Adding pin-utils v0.1.0
      Adding pkcs8 v0.8.0
      Adding pkg-config v0.3.32
      Adding plain v0.2.3
      Adding polyval v0.5.3
      Adding portable-atomic v1.11.1
      Adding potential_utf v0.1.2
      Adding powerfmt v0.2.0
      Adding ppv-lite86 v0.2.21
      Adding proc-macro-crate v0.1.5
      Adding proc-macro-crate v1.3.1
      Adding proc-macro-crate v3.3.0
      Adding proc-macro2 v1.0.95
      Adding qstring v0.7.2
      Adding qualifier_attr v0.2.2
      Adding quinn v0.10.2
      Adding quinn-proto v0.10.6
      Adding quinn-udp v0.4.1
      Adding quote v1.0.40
      Adding r-efi v5.3.0
      Adding rand v0.7.3
      Adding rand v0.8.5
      Adding rand_chacha v0.2.2
      Adding rand_chacha v0.3.1
      Adding rand_core v0.5.1
      Adding rand_core v0.6.4
      Adding rand_hc v0.2.0
      Adding rand_xoshiro v0.6.0
      Adding rayon v1.10.0
      Adding rayon-core v1.12.1
      Adding rcgen v0.10.0
      Adding redox_syscall v0.5.17
      Adding regex v1.11.1
      Adding regex-automata v0.4.9
      Adding regex-syntax v0.8.5
      Adding reqwest v0.11.27
      Adding ring v0.16.20
      Adding ring v0.17.14
      Adding rmp v0.8.14
      Adding rmp-serde v1.3.0
      Adding rpassword v7.4.0
      Adding rtoolbox v0.0.3
      Adding rustc-demangle v0.1.26
      Adding rustc-hash v1.1.0
      Adding rustc_version v0.4.1
      Adding rusticata-macros v4.1.0
      Adding rustix v1.0.8
      Adding rustls v0.21.12
      Adding rustls-native-certs v0.6.3
      Adding rustls-pemfile v1.0.4
      Adding rustls-webpki v0.101.7
      Adding rustversion v1.0.21
      Adding ryu v1.0.20
      Adding schannel v0.1.27
      Adding scopeguard v1.2.0
      Adding scroll v0.11.0
      Adding scroll_derive v0.11.1
      Adding sct v0.7.1
      Adding security-framework v2.11.1
      Adding security-framework-sys v2.14.0
      Adding semver v1.0.26
      Adding serde v1.0.219
      Adding serde_bytes v0.11.17
      Adding serde_derive v1.0.219
      Adding serde_json v1.0.141
      Adding serde_urlencoded v0.7.1
      Adding serde_with v2.3.3
      Adding serde_with_macros v2.3.3
      Adding sha1 v0.10.6
      Adding sha2 v0.9.9
      Adding sha2 v0.10.9
      Adding sha3 v0.9.1
      Adding sha3 v0.10.8
      Adding shank v0.0.11
      Adding shank v0.3.0
      Adding shank_macro v0.0.11
      Adding shank_macro v0.3.0
      Adding shank_macro_impl v0.0.11
      Adding shank_macro_impl v0.3.0
      Adding shank_render v0.3.0
      Adding shell-words v1.1.0
      Adding shlex v1.3.0
      Adding signal-hook-registry v1.4.5
      Adding signature v1.6.4
      Adding siphasher v0.3.11
      Adding sized-chunks v0.6.5
      Adding slab v0.4.10
      Adding smallvec v1.15.1
      Adding socket2 v0.5.10
      Adding socket2 v0.6.0
      Adding solana-account-decoder v1.18.26
      Adding solana-clap-utils v1.18.26
      Adding solana-client v1.18.26 (available: v2.3.6)
      Adding solana-config-program v1.18.26
      Adding solana-connection-cache v1.18.26
      Adding solana-frozen-abi v1.18.26
      Adding solana-frozen-abi-macro v1.18.26
      Adding solana-logger v1.18.26
      Adding solana-measure v1.18.26
      Adding solana-metrics v1.18.26
      Adding solana-net-utils v1.18.26
      Adding solana-perf v1.18.26
      Adding solana-program v1.18.26
      Adding solana-program-runtime v1.18.26
      Adding solana-pubsub-client v1.18.26
      Adding solana-quic-client v1.18.26
      Adding solana-rayon-threadlimit v1.18.26
      Adding solana-remote-wallet v1.18.26
      Adding solana-rpc-client v1.18.26
      Adding solana-rpc-client-api v1.18.26
      Adding solana-rpc-client-nonce-utils v1.18.26
      Adding solana-sdk v1.18.26 (available: v2.3.1)
      Adding solana-sdk-macro v1.18.26
      Adding solana-security-txt v1.1.1
      Adding solana-streamer v1.18.26
      Adding solana-thin-client v1.18.26
      Adding solana-tpu-client v1.18.26
      Adding solana-transaction-status v1.18.26
      Adding solana-udp-client v1.18.26
      Adding solana-version v1.18.26
      Adding solana-vote-program v1.18.26
      Adding solana-zk-token-sdk v1.18.26
      Adding solana_rbpf v0.8.3 (available: v0.8.5)
      Adding spin v0.5.2
      Adding spki v0.5.4
      Adding spl-associated-token-account v1.1.3
      Adding spl-associated-token-account v2.3.0
      Adding spl-discriminator v0.1.0
      Adding spl-discriminator-derive v0.1.2
      Adding spl-discriminator-syn v0.1.2
      Adding spl-memo v3.0.1
      Adding spl-memo v4.0.0 (available: v4.0.4)
      Adding spl-pod v0.1.0
      Adding spl-program-error v0.3.0
      Adding spl-program-error-derive v0.3.2
      Adding spl-tlv-account-resolution v0.5.1
      Adding spl-token v3.5.0
      Adding spl-token v4.0.0 (available: v4.0.3)
      Adding spl-token-2022 v0.6.1
      Adding spl-token-2022 v1.0.0
      Adding spl-token-group-interface v0.1.0
      Adding spl-token-metadata-interface v0.2.0
      Adding spl-transfer-hook-interface v0.4.1
      Adding spl-type-length-value v0.3.0
      Adding stable_deref_trait v1.2.0
      Adding strsim v0.8.0
      Adding strsim v0.10.0
      Adding strsim v0.11.1
      Adding subtle v2.4.1 (available: v2.6.1)
      Adding syn v1.0.109
      Adding syn v2.0.104
      Adding sync_wrapper v0.1.2
      Adding synstructure v0.12.6
      Adding synstructure v0.13.2
      Adding system-configuration v0.5.1
      Adding system-configuration-sys v0.5.0
      Adding tempfile v3.20.0
      Adding termcolor v1.4.1
      Adding textwrap v0.11.0
      Adding textwrap v0.16.2
      Adding thiserror v1.0.69
      Adding thiserror-impl v1.0.69
      Adding time v0.3.41
      Adding time-core v0.1.4
      Adding time-macros v0.2.22
      Adding tiny-bip39 v0.8.2
      Adding tinystr v0.8.1
      Adding tinyvec v1.9.0
      Adding tinyvec_macros v0.1.1
      Adding tokio v1.47.0
      Adding tokio-macros v2.5.0
      Adding tokio-rustls v0.24.1
      Adding tokio-stream v0.1.17
      Adding tokio-tungstenite v0.20.1
      Adding tokio-util v0.7.15
      Adding toml v0.5.11
      Adding toml_datetime v0.6.11
      Adding toml_edit v0.19.15
      Adding toml_edit v0.22.27
      Adding tower-service v0.3.3
      Adding tracing v0.1.41
      Adding tracing-attributes v0.1.30
      Adding tracing-core v0.1.34
      Adding try-lock v0.2.5
      Adding tungstenite v0.20.1
      Adding typenum v1.18.0
      Adding unicode-ident v1.0.18
      Adding unicode-normalization v0.1.24
      Adding unicode-segmentation v1.12.0
      Adding unicode-width v0.1.14
      Adding unicode-width v0.2.1
      Adding unicode-xid v0.2.6
      Adding universal-hash v0.4.1
      Adding unreachable v1.0.0
      Adding untrusted v0.7.1
      Adding untrusted v0.9.0
      Adding uriparse v0.6.4
      Adding url v2.5.4
      Adding utf-8 v0.7.6
      Adding utf8_iter v1.0.4
      Adding vec_map v0.8.2
      Adding version_check v0.9.5
      Adding void v1.0.2
      Adding want v0.3.1
      Adding wasi v0.9.0+wasi-snapshot-preview1
      Adding wasi v0.11.1+wasi-snapshot-preview1
      Adding wasi v0.14.2+wasi-0.2.4
      Adding wasm-bindgen v0.2.100
      Adding wasm-bindgen-backend v0.2.100
      Adding wasm-bindgen-futures v0.4.50
      Adding wasm-bindgen-macro v0.2.100
      Adding wasm-bindgen-macro-support v0.2.100
      Adding wasm-bindgen-shared v0.2.100
      Adding web-sys v0.3.77
      Adding web-time v1.1.0
      Adding webpki-roots v0.24.0
      Adding webpki-roots v0.25.4
      Adding winapi v0.3.9
      Adding winapi-i686-pc-windows-gnu v0.4.0
      Adding winapi-util v0.1.9
      Adding winapi-x86_64-pc-windows-gnu v0.4.0
      Adding windows-core v0.61.2
      Adding windows-implement v0.60.0
      Adding windows-interface v0.59.1
      Adding windows-link v0.1.3
      Adding windows-result v0.3.4
      Adding windows-strings v0.4.2
      Adding windows-sys v0.48.0
      Adding windows-sys v0.52.0
      Adding windows-sys v0.59.0
      Adding windows-sys v0.60.2
      Adding windows-targets v0.48.5
      Adding windows-targets v0.52.6
      Adding windows-targets v0.53.3
      Adding windows_aarch64_gnullvm v0.48.5
      Adding windows_aarch64_gnullvm v0.52.6
      Adding windows_aarch64_gnullvm v0.53.0
      Adding windows_aarch64_msvc v0.48.5
      Adding windows_aarch64_msvc v0.52.6
      Adding windows_aarch64_msvc v0.53.0
      Adding windows_i686_gnu v0.48.5
      Adding windows_i686_gnu v0.52.6
      Adding windows_i686_gnu v0.53.0
      Adding windows_i686_gnullvm v0.52.6
      Adding windows_i686_gnullvm v0.53.0
      Adding windows_i686_msvc v0.48.5
      Adding windows_i686_msvc v0.52.6
      Adding windows_i686_msvc v0.53.0
      Adding windows_x86_64_gnu v0.48.5
      Adding windows_x86_64_gnu v0.52.6
      Adding windows_x86_64_gnu v0.53.0
      Adding windows_x86_64_gnullvm v0.48.5
      Adding windows_x86_64_gnullvm v0.52.6
      Adding windows_x86_64_gnullvm v0.53.0
      Adding windows_x86_64_msvc v0.48.5
      Adding windows_x86_64_msvc v0.52.6
      Adding windows_x86_64_msvc v0.53.0
      Adding winnow v0.5.40
      Adding winnow v0.7.12
      Adding winreg v0.50.0
      Adding wit-bindgen-rt v0.39.0
      Adding writeable v0.6.1
      Adding x509-parser v0.14.0
      Adding yasna v0.5.2
      Adding yoke v0.8.0
      Adding yoke-derive v0.8.0
      Adding zerocopy v0.8.26
      Adding zerocopy-derive v0.8.26
      Adding zerofrom v0.1.6
      Adding zerofrom-derive v0.1.6
      Adding zeroize v1.3.0 (available: v1.8.1)
      Adding zeroize_derive v1.4.2
      Adding zerotrie v0.2.2
      Adding zerovec v0.11.2
      Adding zerovec-derive v0.11.1
      Adding zstd v0.11.2+zstd.1.5.2
      Adding zstd-safe v5.0.2+zstd.1.5.2
      Adding zstd-sys v2.0.15+zstd.1.5.7
  Downloaded anchor-attribute-constant v0.27.0
  Downloaded anchor-attribute-access-control v0.27.0
  Downloaded anchor-attribute-account v0.27.0
  Downloaded shank v0.3.0
  Downloaded anchor-client v0.27.0
  Downloaded shank_render v0.3.0
  Downloaded anchor-derive-accounts v0.27.0
  Downloaded anchor-attribute-event v0.27.0
  Downloaded shank_macro v0.3.0
  Downloaded anchor-derive-space v0.27.0
  Downloaded spl-associated-token-account v1.1.3
  Downloaded spl-memo v3.0.1
  Downloaded anchor-attribute-program v0.27.0
  Downloaded spl-token-2022 v0.6.1
  Downloaded anchor-attribute-error v0.27.0
  Downloaded bs58 v0.3.1
  Downloaded shank_macro_impl v0.3.0
  Downloaded anchor-lang v0.27.0
  Downloaded anchor-syn v0.27.0
  Downloaded mpl-utils v0.2.0
  Downloaded mpl-token-auth-rules v1.5.1
  Downloaded mpl-token-metadata v1.13.1
  Downloaded 22 crates (568.0KiB) in 2.67s
   Compiling proc-macro2 v1.0.95
   Compiling unicode-ident v1.0.18
   Compiling libc v0.2.174
   Compiling version_check v0.9.5
   Compiling typenum v1.18.0
   Compiling cfg-if v1.0.1
   Compiling autocfg v1.5.0
   Compiling serde v1.0.219
   Compiling syn v1.0.109
   Compiling shlex v1.3.0
   Compiling subtle v2.4.1
   Compiling once_cell v1.21.3
   Compiling zerocopy v0.8.26
   Compiling thiserror v1.0.69
   Compiling memchr v2.7.5
   Compiling generic-array v0.14.7
   Compiling num-traits v0.2.19
   Compiling semver v1.0.26
   Compiling anyhow v1.0.98
   Compiling itoa v1.0.15
   Compiling jobserver v0.1.33
   Compiling log v0.4.27
   Compiling serde_json v1.0.141
   Compiling quote v1.0.40
   Compiling cc v1.2.30
   Compiling rustc_version v0.4.1
   Compiling syn v2.0.104
   Compiling equivalent v1.0.2
   Compiling getrandom v0.2.16
   Compiling cpufeatures v0.2.17
   Compiling hashbrown v0.15.4
   Compiling num-integer v0.1.46
   Compiling toml_datetime v0.6.11
   Compiling rand_core v0.6.4
   Compiling crossbeam-utils v0.8.21
   Compiling getrandom v0.3.3
   Compiling byteorder v1.5.0
   Compiling crunchy v0.2.4
   Compiling indexmap v2.10.0
   Compiling either v1.15.0
   Compiling getrandom v0.1.16
   Compiling paste v1.0.15
   Compiling opaque-debug v0.3.1
   Compiling num-bigint v0.4.6
   Compiling ahash v0.8.12
   Compiling digest v0.9.0
   Compiling block-padding v0.2.1
   Compiling rand_core v0.5.1
   Compiling rustversion v1.0.21
   Compiling lazy_static v1.5.0
   Compiling wasm-bindgen-shared v0.2.100
   Compiling winnow v0.7.12
   Compiling libsecp256k1-core v0.2.2
   Compiling crossbeam-epoch v0.9.18
   Compiling itertools v0.10.5
   Compiling tinyvec_macros v0.1.1
   Compiling rayon-core v1.12.1
   Compiling base64 v0.21.7
   Compiling tinyvec v1.9.0
   Compiling crossbeam-deque v0.8.6
   Compiling ppv-lite86 v0.2.21
   Compiling ahash v0.7.8
   Compiling rand_chacha v0.3.1
   Compiling hashbrown v0.13.2
   Compiling rand_chacha v0.2.2
   Compiling rand v0.8.5
   Compiling toml_edit v0.22.27
   Compiling rand v0.7.3
   Compiling bumpalo v3.19.0
   Compiling feature-probe v0.1.1
   Compiling ryu v1.0.20
   Compiling bv v0.11.1
   Compiling wasm-bindgen-backend v0.2.100
   Compiling ark-std v0.4.0
   Compiling libsecp256k1-gen-genmult v0.2.1
   Compiling libsecp256k1-gen-ecmult v0.2.1
   Compiling solana-frozen-abi-macro v1.18.26
   Compiling keccak v0.1.5
   Compiling bitmaps v2.1.0
   Compiling im v15.1.0
   Compiling cfg_aliases v0.2.1
   Compiling rustc-hash v1.1.0
   Compiling borsh v1.5.7
   Compiling proc-macro-crate v3.3.0
   Compiling ark-serialize-derive v0.4.2
   Compiling ark-ff-macros v0.4.2
   Compiling serde_derive v1.0.219
   Compiling thiserror-impl v1.0.69
   Compiling zeroize_derive v1.4.2
   Compiling derivative v2.2.0
   Compiling ark-ff-asm v0.4.2
   Compiling sized-chunks v0.6.5
   Compiling wasm-bindgen-macro-support v0.2.100
   Compiling rayon v1.10.0
   Compiling libsecp256k1 v0.6.0
   Compiling zeroize v1.3.0
   Compiling borsh-schema-derive-internal v0.10.4
   Compiling borsh-schema-derive-internal v0.9.3
   Compiling borsh-derive-internal v0.10.4
   Compiling borsh-derive-internal v0.9.3
   Compiling blake3 v1.8.2
   Compiling rand_xoshiro v0.6.0
   Compiling solana-frozen-abi v1.18.26
   Compiling memoffset v0.9.1
   Compiling arrayref v0.3.9
   Compiling wasm-bindgen v0.2.100
   Compiling bs58 v0.4.0
   Compiling core-foundation-sys v0.8.7
   Compiling wasm-bindgen-macro v0.2.100
   Compiling borsh-derive v1.5.7
   Compiling hashbrown v0.11.2
   Compiling bytemuck_derive v1.10.0
   Compiling unicode-normalization v0.1.24
   Compiling solana-program v1.18.26
   Compiling memmap2 v0.5.10
   Compiling constant_time_eq v0.3.1
   Compiling arrayvec v0.7.6
   Compiling base64 v0.12.3
   Compiling solana-sdk-macro v1.18.26
   Compiling num-derive v0.4.2
   Compiling fnv v1.0.7
   Compiling percent-encoding v2.3.1
   Compiling aho-corasick v1.1.3
   Compiling regex-syntax v0.8.5
   Compiling strsim v0.11.1
   Compiling ident_case v1.0.1
   Compiling bytemuck v1.23.1
   Compiling darling_core v0.20.11
   Compiling atty v0.2.14
   Compiling smallvec v1.15.1
   Compiling signature v1.6.4
   Compiling termcolor v1.4.1
   Compiling synstructure v0.13.2
   Compiling ed25519 v1.5.3
   Compiling humantime v2.2.0
   Compiling iana-time-zone v0.1.63
   Compiling num_enum_derive v0.7.4
   Compiling solana-sdk v1.18.26
   Compiling pin-project-lite v0.2.16
   Compiling derivation-path v0.2.0
   Compiling qstring v0.7.2
   Compiling uriparse v0.6.4
   Compiling zerofrom-derive v0.1.6
   Compiling qualifier_attr v0.2.2
   Compiling displaydoc v0.2.5
   Compiling assert_matches v1.5.0
   Compiling siphasher v0.3.11
   Compiling regex-automata v0.4.9
   Compiling num_enum v0.7.4
   Compiling yoke-derive v0.8.0
   Compiling lock_api v0.4.13
   Compiling stable_deref_trait v1.2.0
   Compiling parking_lot_core v0.9.11
   Compiling toml v0.5.11
   Compiling zerofrom v0.1.6
   Compiling bytes v1.10.1
   Compiling bitflags v2.9.1
   Compiling serde_bytes v0.11.17
   Compiling block-buffer v0.10.4
   Compiling crypto-common v0.1.6
   Compiling digest v0.10.7
   Compiling block-buffer v0.9.0
   Compiling crypto-mac v0.8.0
   Compiling ark-serialize v0.4.2
   Compiling sha2 v0.9.9
   Compiling proc-macro-crate v0.1.5
   Compiling hmac v0.8.1
   Compiling sha2 v0.10.9
   Compiling curve25519-dalek v3.2.1
   Compiling hmac-drbg v0.3.0
   Compiling ark-ff v0.4.2
   Compiling borsh-derive v0.10.4
   Compiling borsh-derive v0.9.3
   Compiling pbkdf2 v0.4.0
   Compiling borsh v0.9.3
   Compiling borsh v0.10.4
   Compiling tiny-bip39 v0.8.2
   Compiling sha3 v0.10.8
   Compiling bincode v1.3.3
   Compiling regex v1.11.1
   Compiling darling_macro v0.20.11
   Compiling ed25519-dalek v1.0.1
   Compiling hmac v0.12.1
   Compiling env_logger v0.9.3
   Compiling ed25519-dalek-bip32 v0.2.0
   Compiling pbkdf2 v0.11.0
   Compiling chrono v0.4.41
   Compiling yoke v0.8.0
   Compiling darling v0.20.11
   Compiling serde_with_macros v2.3.3
   Compiling solana-logger v1.18.26
   Compiling scopeguard v1.2.0
   Compiling zerovec-derive v0.11.1
   Compiling parking_lot v0.12.4
   Compiling ring v0.17.14
   Compiling futures-core v0.3.31
   Compiling tokio-macros v2.5.0
   Compiling serde_with v2.3.3
   Compiling mio v1.0.4
   Compiling signal-hook-registry v1.4.5
   Compiling zerovec v0.11.2
   Compiling socket2 v0.6.0
   Compiling ark-poly v0.4.2
   Compiling writeable v0.6.1
   Compiling untrusted v0.9.0
   Compiling litemap v0.8.0
   Compiling tokio v1.47.0
   Compiling zerotrie v0.2.2
   Compiling futures-sink v0.3.31
   Compiling pin-utils v0.1.0
   Compiling slab v0.4.10
   Compiling icu_normalizer_data v2.0.0
   Compiling icu_properties_data v2.0.1
   Compiling futures-channel v0.3.31
   Compiling futures-macro v0.3.31
   Compiling rustls v0.21.12
   Compiling ark-ec v0.4.2
   Compiling tinystr v0.8.1
   Compiling potential_utf v0.1.2
   Compiling icu_collections v2.0.0
   Compiling icu_locale_core v2.0.0
   Compiling futures-io v0.3.31
   Compiling futures-task v0.3.31
   Compiling cipher v0.3.0
   Compiling tracing-attributes v0.1.30
   Compiling tracing-core v0.1.34
   Compiling futures-util v0.3.31
   Compiling universal-hash v0.4.1
   Compiling icu_provider v2.0.0
   Compiling http v0.2.12
   Compiling form_urlencoded v1.2.1
   Compiling icu_properties v2.0.1
   Compiling icu_normalizer v2.0.0
   Compiling ark-bn254 v0.4.0
   Compiling light-poseidon v0.2.0
   Compiling tracing v0.1.41
   Compiling httparse v1.10.1
   Compiling idna_adapter v1.2.1
   Compiling bitflags v1.3.2
   Compiling utf8_iter v1.0.4
   Compiling idna v1.0.3
   Compiling polyval v0.5.3
   Compiling aes v0.7.5
   Compiling ctr v0.8.0
   Compiling aead v0.4.3
   Compiling core-foundation v0.9.4
   Compiling socket2 v0.5.10
   Compiling winnow v0.5.40
   Compiling aes-gcm-siv v0.10.3
   Compiling url v2.5.4
   Compiling sha3 v0.9.1
   Compiling merlin v3.0.0
   Compiling crc32fast v1.5.0
   Compiling alloc-no-stdlib v2.0.4
   Compiling alloc-stdlib v0.2.2
   Compiling tokio-util v0.7.15
   Compiling rustls-pemfile v1.0.4
   Compiling try-lock v0.2.5
   Compiling system-configuration-sys v0.5.0
   Compiling adler2 v2.0.1
   Compiling toml_edit v0.19.15
   Compiling miniz_oxide v0.8.9
   Compiling want v0.3.1
   Compiling brotli-decompressor v5.0.0
   Compiling http-body v0.4.6
   Compiling num-bigint v0.2.6
   Compiling h2 v0.3.27
   Compiling tower-service v0.3.3
   Compiling httpdate v1.0.3
   Compiling flate2 v1.1.2
   Compiling num-rational v0.2.4
   Compiling num-complex v0.2.4
   Compiling webpki-roots v0.25.4
   Compiling brotli v8.0.1
   Compiling system-configuration v0.5.1
   Compiling proc-macro-crate v1.3.1
   Compiling spl-program-error-derive v0.3.2
   Compiling spl-discriminator-syn v0.1.2
   Compiling serde_urlencoded v0.7.1
   Compiling scroll_derive v0.11.1
   Compiling num-derive v0.3.3
   Compiling crossbeam-channel v0.5.15
   Compiling encoding_rs v0.8.35
   Compiling mime v0.3.17
   Compiling ipnet v2.11.0
   Compiling void v1.0.2
   Compiling sync_wrapper v0.1.2
   Compiling unreachable v1.0.0
   Compiling scroll v0.11.0
   Compiling spl-discriminator-derive v0.1.2
   Compiling num-iter v0.1.45
   Compiling gethostname v0.2.3
   Compiling ascii v0.9.3
   Compiling plain v0.2.3
   Compiling goblin v0.5.4
   Compiling combine v3.8.1
   Compiling num v0.2.1
   Compiling enum-iterator-derive v1.4.0
   Compiling hash32 v0.2.1
   Compiling rustls-webpki v0.101.7
   Compiling sct v0.7.1
   Compiling hyper v0.14.32
   Compiling async-compression v0.4.27
   Compiling solana-program-runtime v1.18.26
   Compiling rustc-demangle v0.1.26
   Compiling enum-iterator v1.5.0
   Compiling percentage v0.1.0
   Compiling solana_rbpf v0.8.3
   Compiling eager v0.1.0
   Compiling pkg-config v0.3.32
   Compiling tokio-rustls v0.24.1
   Compiling num-conv v0.1.0
   Compiling zstd-sys v2.0.15+zstd.1.5.7
   Compiling time-core v0.1.4
   Compiling powerfmt v0.2.0
   Compiling num_enum_derive v0.6.1
   Compiling time-macros v0.2.22
   Compiling hyper-rustls v0.24.2
   Compiling deranged v0.4.0
   Compiling reqwest v0.11.27
   Compiling num_enum v0.6.1
   Compiling zstd-safe v5.0.2+zstd.1.5.2
   Compiling ring v0.16.20
   Compiling solana-version v1.18.26
   Compiling solana-security-txt v1.1.1
   Compiling solana-vote-program v1.18.26
   Compiling base64 v0.13.1
   Compiling untrusted v0.7.1
   Compiling time v0.3.41
   Compiling futures-executor v0.3.31
   Compiling Inflector v0.11.4
   Compiling minimal-lexical v0.2.1
   Compiling unicode-segmentation v1.12.0
   Compiling unicode-xid v0.2.6
   Compiling unicode-width v0.2.1
   Compiling console v0.15.11
   Compiling synstructure v0.12.6
   Compiling heck v0.3.3
   Compiling nom v7.1.3
   Compiling futures v0.3.31
   Compiling bs58 v0.3.1
   Compiling data-encoding v2.9.0
   Compiling jsonrpc-core v18.0.0
   Compiling anchor-syn v0.27.0
   Compiling asn1-rs-derive v0.4.0
   Compiling rusticata-macros v4.1.0
   Compiling yasna v0.5.2
   Compiling pem v1.1.1
   Compiling security-framework-sys v2.14.0
   Compiling async-trait v0.1.88
   Compiling asn1-rs-impl v0.1.0
   Compiling memoffset v0.7.1
   Compiling rustix v1.0.8
   Compiling portable-atomic v1.11.1
   Compiling asn1-rs v0.5.2
   Compiling security-framework v2.11.1
   Compiling errno v0.3.13
   Compiling indexmap v1.9.3
   Compiling oid-registry v0.6.1
   Compiling const-oid v0.7.1
   Compiling der v0.5.1
   Compiling rustls-native-certs v0.6.3
   Compiling dlopen2_derive v0.3.0
   Compiling solana-perf v1.18.26
   Compiling num_cpus v1.17.0
   Compiling base64ct v1.8.0
   Compiling hashbrown v0.12.3
   Compiling event-listener v2.5.3
   Compiling fastrand v2.3.0
   Compiling os_str_bytes v6.6.1
   Compiling number_prefix v0.4.0
   Compiling tempfile v3.20.0
   Compiling indicatif v0.17.11
   Compiling clap_lex v0.2.4
   Compiling spki v0.5.4
   Compiling solana-rayon-threadlimit v1.18.26
   Compiling dlopen2 v0.5.0
   Compiling nix v0.26.4
   Compiling der-parser v8.2.0
   Compiling webpki-roots v0.24.0
   Compiling num_enum_derive v0.5.11
   Compiling quinn-udp v0.4.1
   Compiling sha1 v0.10.6
   Compiling concurrent-queue v2.5.0
   Compiling utf-8 v0.7.6
   Compiling strsim v0.10.0
   Compiling shell-words v1.1.0
   Compiling textwrap v0.16.2
   Compiling unicode-width v0.1.14
   Compiling clap v3.2.25
   Compiling textwrap v0.11.0
   Compiling num_enum v0.5.11
   Compiling dialoguer v0.10.4
   Compiling tungstenite v0.20.1
   Compiling async-channel v1.9.0
   Compiling x509-parser v0.14.0
   Compiling pkcs8 v0.8.0
   Compiling rcgen v0.10.0
   Compiling quinn-proto v0.10.6
   Compiling shank_macro_impl v0.3.0
   Compiling rtoolbox v0.0.3
   Compiling strsim v0.8.0
   Compiling vec_map v0.8.2
   Compiling ansi_term v0.12.1
   Compiling histogram v0.6.9
   Compiling clap v2.34.0
   Compiling shank_render v0.3.0
   Compiling rpassword v7.4.0
   Compiling tokio-tungstenite v0.20.1
   Compiling tokio-stream v0.1.17
   Compiling shank_macro v0.3.0
   Compiling quinn v0.10.2
   Compiling async-mutex v1.4.1
   Compiling shank_macro_impl v0.0.11
   Compiling rmp v0.8.14
   Compiling hashbrown v0.14.5
   Compiling shank_macro v0.0.11
   Compiling rmp-serde v1.3.0
   Compiling dashmap v5.5.3
   Compiling shank v0.3.0
   Compiling anchor-attribute-error v0.27.0
   Compiling anchor-attribute-account v0.27.0
   Compiling anchor-derive-accounts v0.27.0
   Compiling anchor-attribute-event v0.27.0
   Compiling anchor-attribute-program v0.27.0
   Compiling anchor-attribute-constant v0.27.0
   Compiling mpl-token-metadata-context-derive v0.2.1
   Compiling anchor-derive-space v0.27.0
   Compiling shank v0.0.11
   Compiling mpl-token-metadata-context-derive v0.3.0
   Compiling anchor-attribute-access-control v0.27.0
   Compiling spl-program-error v0.3.0
   Compiling spl-discriminator v0.1.0
   Compiling spl-token v4.0.0
   Compiling spl-memo v4.0.0
   Compiling spl-token v3.5.0
   Compiling spl-memo v3.0.1
   Compiling anchor-lang v0.27.0
   Compiling zstd v0.11.2+zstd.1.5.2
   Compiling mpl-utils v0.2.0
   Compiling solana-zk-token-sdk v1.18.26
   Compiling solana-measure v1.18.26
   Compiling solana-metrics v1.18.26
   Compiling solana-remote-wallet v1.18.26
   Compiling solana-net-utils v1.18.26
   Compiling solana-clap-utils v1.18.26
   Compiling solana-connection-cache v1.18.26
   Compiling solana-config-program v1.18.26
   Compiling solana-streamer v1.18.26
   Compiling spl-pod v0.1.0
   Compiling spl-token-2022 v0.6.1
   Compiling mpl-token-auth-rules v1.5.1
   Compiling spl-type-length-value v0.3.0
   Compiling spl-token-group-interface v0.1.0
   Compiling solana-udp-client v1.18.26
   Compiling spl-tlv-account-resolution v0.5.1
   Compiling spl-token-metadata-interface v0.2.0
   Compiling spl-transfer-hook-interface v0.4.1
   Compiling spl-associated-token-account v1.1.3
   Compiling spl-token-2022 v1.0.0
   Compiling solana-account-decoder v1.18.26
   Compiling spl-associated-token-account v2.3.0
   Compiling mpl-token-metadata v1.13.1
   Compiling solana-transaction-status v1.18.26
error[E0277]: the trait bound `Payload: BorshSerialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:48:10
   |
48 | #[derive(BorshSerialize, BorshDeserialize, Clone, ShankInstruction, Acco...
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshSerialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshSerialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:10
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 2 redundant requirements hidden
   = note: required for `instruction::uses::UseArgs` to implement `borsh::BorshSerialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-12656203998162828957.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshDeserialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:48:26
   |
48 | #[derive(BorshSerialize, BorshDeserialize, Clone, ShankInstruction, Acco...
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshDeserialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshDeserialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:26
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 2 redundant requirements hidden
   = note: required for `instruction::uses::UseArgs` to implement `borsh::BorshDeserialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-809397421473689894.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshDeserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshSerialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:17:10
   |
17 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshSerialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshSerialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:10
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshSerialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-12656203998162828957.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshDeserialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:17:26
   |
17 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshDeserialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshDeserialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:26
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshDeserialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-809397421473689894.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshDeserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshSerialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:53:10
   |
53 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshSerialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshSerialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:10
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshSerialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-12656203998162828957.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshDeserialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:53:26
   |
53 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshDeserialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshDeserialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:26
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshDeserialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-809397421473689894.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshDeserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshSerialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:64:10
   |
64 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshSerialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshSerialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:10
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshSerialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-12656203998162828957.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshDeserialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:64:26
   |
64 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshDeserialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshDeserialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:26
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshDeserialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-809397421473689894.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshDeserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshSerialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:80:10
   |
80 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshSerialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshSerialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:10
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshSerialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-12656203998162828957.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshDeserialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:80:26
   |
80 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshDeserialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshDeserialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:26
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshDeserialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-809397421473689894.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshDeserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshSerialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:11:10
   |
11 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshSerialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshSerialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:10
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshSerialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-12656203998162828957.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshDeserialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:11:26
   |
11 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshDeserialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshDeserialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:26
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshDeserialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-809397421473689894.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshDeserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshSerialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:21:10
   |
21 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshSerialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshSerialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:10
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshSerialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-12656203998162828957.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshDeserialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:21:26
   |
21 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshDeserialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshDeserialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:26
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshDeserialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-809397421473689894.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshDeserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshSerialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:28:10
   |
28 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshSerialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshSerialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:10
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshSerialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-12656203998162828957.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshDeserialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:28:26
   |
28 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshDeserialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshDeserialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:26
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshDeserialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-809397421473689894.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshDeserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshSerialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:10
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshSerialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-12656203998162828957.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshDeserialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:26
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshDeserialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-809397421473689894.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshDeserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:33:14
   |
32 |           data: MetadataInstruction::BubblegumSetCollectionSize(SetColle...
   |  _______________-
33 | |             .try_to_vec()
   | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_____________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/burn.rs:57:51
   |
57 |         data: MetadataInstruction::BurnEditionNft.try_to_vec().unwrap(),
   |                                                   ^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 | pub enum MetadataInstruction {
   | ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 | pub enum DelegateArgs {
   | --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 | pub enum MintArgs {
   | ----------------- doesn't satisfy `_: BorshSerialize`
...
65 | pub enum TransferArgs {
   | --------------------- doesn't satisfy `_: BorshSerialize`
...
81 | pub enum UpdateArgs {
   | ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 | pub enum LockArgs {
   | ----------------- doesn't satisfy `_: BorshSerialize`
...
22 | pub enum UnlockArgs {
   | ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 | pub enum UseArgs {
   | ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/burn.rs:98:44
   |
98 |         data: MetadataInstruction::BurnNft.try_to_vec().unwrap(),
   |                                            ^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 | pub enum MetadataInstruction {
   | ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 | pub enum DelegateArgs {
   | --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 | pub enum MintArgs {
   | ----------------- doesn't satisfy `_: BorshSerialize`
...
65 | pub enum TransferArgs {
   | --------------------- doesn't satisfy `_: BorshSerialize`
...
81 | pub enum UpdateArgs {
   | ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 | pub enum LockArgs {
   | ----------------- doesn't satisfy `_: BorshSerialize`
...
22 | pub enum UnlockArgs {
   | ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 | pub enum UseArgs {
   | ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/burn.rs:174:18
    |
173 |               data: MetadataInstruction::Burn(self.args.clone())
    |  ___________________-
174 | |                 .try_to_vec()
    | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/collection.rs:48:14
   |
47 |           data: MetadataInstruction::ApproveCollectionAuthority
   |  _______________-
48 | |             .try_to_vec()
   | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_____________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/collection.rs:83:14
   |
82 |           data: MetadataInstruction::RevokeCollectionAuthority
   |  _______________-
83 | |             .try_to_vec()
   | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_____________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/collection.rs:136:14
    |
135 |           data: MetadataInstruction::SetAndVerifyCollection
    |  _______________-
136 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/collection.rs:187:14
    |
186 |           data: MetadataInstruction::SetAndVerifySizedCollectionItem
    |  _______________-
187 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/collection.rs:221:14
    |
220 |           data: MetadataInstruction::SetCollectionSize(SetCollectionSiz...
    |  _______________-
221 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/collection.rs:267:14
    |
266 |           data: MetadataInstruction::UnverifyCollection
    |  _______________-
267 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/collection.rs:315:14
    |
314 |           data: MetadataInstruction::UnverifySizedCollectionItem
    |  _______________-
315 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/collection.rs:362:53
    |
362 |         data: MetadataInstruction::VerifyCollection.try_to_vec().unwrap(),
    |                                                     ^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  | pub enum MetadataInstruction {
    | ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  | pub enum DelegateArgs {
    | --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  | pub enum MintArgs {
    | ----------------- doesn't satisfy `_: BorshSerialize`
...
65  | pub enum TransferArgs {
    | --------------------- doesn't satisfy `_: BorshSerialize`
...
81  | pub enum UpdateArgs {
    | ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  | pub enum LockArgs {
    | ----------------- doesn't satisfy `_: BorshSerialize`
...
22  | pub enum UnlockArgs {
    | ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  | pub enum UseArgs {
    | ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/collection.rs:406:14
    |
405 |           data: MetadataInstruction::VerifySizedCollectionItem
    |  _______________-
406 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:183:18
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
182 |               data: MetadataInstruction::Delegate(self.args.clone())
    |  ___________________-
183 | |                 .try_to_vec()
    | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:242:18
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
241 |               data: MetadataInstruction::Revoke(self.args.clone())
    |  ___________________-
242 | |                 .try_to_vec()
    | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/edition.rs:31:14
   |
30 |           data: MetadataInstruction::ConvertMasterEditionV1ToV2
   |  _______________-
31 | |             .try_to_vec()
   | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_____________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/edition.rs:71:14
   |
70 |           data: MetadataInstruction::CreateMasterEditionV3(CreateMasterE...
   |  _______________-
71 | |             .try_to_vec()
   | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_____________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/edition.rs:135:10
    |
132 |           data: MetadataInstruction::MintNewEditionFromMasterEditionVia...
    |  _______________-
133 | |             MintNewEditionFromMasterEditionViaTokenArgs { edition },
134 | |         )
135 | |         .try_to_vec()
    | |         -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/escrow.rs:32:10
   |
31 |       let data = MetadataInstruction::CloseEscrowAccount
   |  ________________-
32 | |         .try_to_vec()
   | |         -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/escrow.rs:68:10
   |
67 |       let data = MetadataInstruction::CreateEscrowAccount
   |  ________________-
68 | |         .try_to_vec()
   | |         -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/escrow.rs:118:10
    |
117 |       let data = MetadataInstruction::TransferOutOfEscrow(TransferOutOf...
    |  ________________-
118 | |         .try_to_vec()
    | |         -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/fee.rs:22:44
   |
22 |         data: MetadataInstruction::Collect.try_to_vec().unwrap(),
   |                                            ^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 | pub enum MetadataInstruction {
   | ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 | pub enum DelegateArgs {
   | --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 | pub enum MintArgs {
   | ----------------- doesn't satisfy `_: BorshSerialize`
...
65 | pub enum TransferArgs {
   | --------------------- doesn't satisfy `_: BorshSerialize`
...
81 | pub enum UpdateArgs {
   | ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 | pub enum LockArgs {
   | ----------------- doesn't satisfy `_: BorshSerialize`
...
22 | pub enum UnlockArgs {
   | ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 | pub enum UseArgs {
   | ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/freeze.rs:36:14
   |
35 |           data: MetadataInstruction::FreezeDelegatedAccount
   |  _______________-
36 | |             .try_to_vec()
   | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_____________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/freeze.rs:68:14
   |
67 |           data: MetadataInstruction::ThawDelegatedAccount
   |  _______________-
68 | |             .try_to_vec()
   | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_____________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:497:10
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
484 |           data: MetadataInstruction::CreateMetadataAccountV3(CreateMeta...
    |  _______________-
485 | |             data: DataV2 {
486 | |                 name,
487 | |                 symbol,
...   |
496 | |         })
497 | |         .try_to_vec()
    | |         -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:507:49
    |
54  | pub enum MintArgs {
    | ----------------- doesn't satisfy `_: BorshSerialize`
...
65  | pub enum TransferArgs {
    | --------------------- doesn't satisfy `_: BorshSerialize`
...
81  | pub enum UpdateArgs {
    | ------------------- doesn't satisfy `_: BorshSerialize`
...
507 |         data: MetadataInstruction::PuffMetadata.try_to_vec().unwrap(),
    |                                                 ^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  | pub enum MetadataInstruction {
    | ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  | pub enum DelegateArgs {
    | --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  | pub enum LockArgs {
    | ----------------- doesn't satisfy `_: BorshSerialize`
...
22  | pub enum UnlockArgs {
    | ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  | pub enum UseArgs {
    | ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:525:14
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
524 |           data: MetadataInstruction::RemoveCreatorVerification
    |  _______________-
525 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:542:54
    |
54  | pub enum MintArgs {
    | ----------------- doesn't satisfy `_: BorshSerialize`
...
65  | pub enum TransferArgs {
    | --------------------- doesn't satisfy `_: BorshSerialize`
...
81  | pub enum UpdateArgs {
    | ------------------- doesn't satisfy `_: BorshSerialize`
...
542 |     let data = MetadataInstruction::SetTokenStandard.try_to_vec().unwra...
    |                                                      ^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  | pub enum MetadataInstruction {
    | ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  | pub enum DelegateArgs {
    | --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  | pub enum LockArgs {
    | ----------------- doesn't satisfy `_: BorshSerialize`
...
22  | pub enum UnlockArgs {
    | ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  | pub enum UseArgs {
    | ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:564:49
    |
54  | pub enum MintArgs {
    | ----------------- doesn't satisfy `_: BorshSerialize`
...
65  | pub enum TransferArgs {
    | --------------------- doesn't satisfy `_: BorshSerialize`
...
81  | pub enum UpdateArgs {
    | ------------------- doesn't satisfy `_: BorshSerialize`
...
564 |         data: MetadataInstruction::SignMetadata.try_to_vec().unwrap(),
    |                                                 ^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  | pub enum MetadataInstruction {
    | ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  | pub enum DelegateArgs {
    | --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  | pub enum LockArgs {
    | ----------------- doesn't satisfy `_: BorshSerialize`
...
22  | pub enum UnlockArgs {
    | ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  | pub enum UseArgs {
    | ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:590:10
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
584 |           data: MetadataInstruction::UpdateMetadataAccountV2(UpdateMeta...
    |  _______________-
585 | |             data,
586 | |             update_authority: new_update_authority,
587 | |             primary_sale_happened,
588 | |             is_mutable,
589 | |         })
590 | |         .try_to_vec()
    | |         -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:611:14
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
610 |           data: MetadataInstruction::UpdatePrimarySaleHappenedViaToken
    |  _______________-
611 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:654:18
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
653 |               data: MetadataInstruction::Create(self.args.clone())
    |  ___________________-
654 | |                 .try_to_vec()
    | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:717:18
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
716 |               data: MetadataInstruction::Mint(self.args.clone())
    |  ___________________-
717 | |                 .try_to_vec()
    | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:787:18
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
786 |               data: MetadataInstruction::Transfer(self.args.clone())
    |  ___________________-
787 | |                 .try_to_vec()
    | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:835:18
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
834 |               data: MetadataInstruction::Update(self.args.clone())
    |  ___________________-
835 | |                 .try_to_vec()
    | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:895:18
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
894 |               data: MetadataInstruction::Print(self.args.clone())
    |  ___________________-
895 | |                 .try_to_vec()
    | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:79:18
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
...
78 |               data: MetadataInstruction::Lock(self.args.clone())
   |  ___________________-
79 | |                 .try_to_vec()
   | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_________________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:135:18
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
134 |               data: MetadataInstruction::Unlock(self.args.clone())
    |  ___________________-
135 | |                 .try_to_vec()
    | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:85:14
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
...
84 |           data: MetadataInstruction::ApproveUseAuthority(ApproveUseAutho...
   |  _______________-
85 | |             .try_to_vec()
   | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_____________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:129:14
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
...
128 |           data: MetadataInstruction::RevokeUseAuthority
    |  _______________-
129 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:186:14
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
...
185 |           data: MetadataInstruction::Utilize(UtilizeArgs { number_of_us...
    |  _______________-
186 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/verification.rs:50:18
   |
49 |               data: MetadataInstruction::Verify(self.args.clone())
   |  ___________________-
50 | |                 .try_to_vec()
   | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_________________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/verification.rs:87:18
   |
86 |               data: MetadataInstruction::Unverify(self.args.clone())
   |  ___________________-
87 | |                 .try_to_vec()
   | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_________________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the variant or associated item `try_from_slice` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:90:50
   |
90 |     let instruction = match MetadataInstruction::try_from_slice(input) {
   |                                                  ^^^^^^^^^^^^^^ variant or associated item cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 | pub enum MetadataInstruction {
   | ---------------------------- variant or associated item `try_from_slice` not found for this enum because it doesn't satisfy `_: BorshDeserialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 | pub enum DelegateArgs {
   | --------------------- doesn't satisfy `_: BorshDeserialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 | pub enum MintArgs {
   | ----------------- doesn't satisfy `_: BorshDeserialize`
...
65 | pub enum TransferArgs {
   | --------------------- doesn't satisfy `_: BorshDeserialize`
...
81 | pub enum UpdateArgs {
   | ------------------- doesn't satisfy `_: BorshDeserialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 | pub enum LockArgs {
   | ----------------- doesn't satisfy `_: BorshDeserialize`
...
22 | pub enum UnlockArgs {
   | ------------------- doesn't satisfy `_: BorshDeserialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 | pub enum UseArgs {
   | ---------------- doesn't satisfy `_: BorshDeserialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshDeserialize`
           `instruction::metadata::MintArgs: borsh::BorshDeserialize`
           `instruction::metadata::TransferArgs: borsh::BorshDeserialize`
           `instruction::metadata::UpdateArgs: borsh::BorshDeserialize`
           `instruction::state::LockArgs: borsh::BorshDeserialize`
           `instruction::state::UnlockArgs: borsh::BorshDeserialize`
           `instruction::uses::UseArgs: borsh::BorshDeserialize`
note: the trait `borsh::BorshDeserialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_from_slice`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshDeserialize`
           candidate #2: `borsh::de::BorshDeserialize`
           candidate #3: `borsh::de::BorshDeserialize`

error[E0277]: the trait bound `T: borsh::de::BorshDeserialize` is not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/utils/mod.rs:176:21
    |
176 |     let result: T = try_from_slice_unchecked(data)?;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `borsh::de::BorshDeserialize` is not implemented for `T`
    |
note: required by a bound in `solana_program::borsh::try_from_slice_unchecked`
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-1.18.26/src/borsh.rs:39:36
    |
39  | ...m_slice_unchecked<T: BorshDeserialize>(data: &[u8]) -> Result<T, Err...
    |                         ^^^^^^^^^^^^^^^^ required by this bound in `try_from_slice_unchecked`
help: consider further restricting type parameter `T` with trait `BorshDeserialize`
    |
167 | pub fn try_from_slice_checked<T: TokenMetadataAccount + borsh::de::BorshDeserialize>(
    |                                                       +++++++++++++++++++++++++++++

   Compiling solana-rpc-client-api v1.18.26
Some errors have detailed explanations: E0277, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `mpl-token-metadata` (lib) due to 63 previous errors
warning: build failed, waiting for other jobs to finish...
   Compiling solana-rpc-client v1.18.26
   Compiling solana-pubsub-client v1.18.26
   Compiling solana-quic-client v1.18.26
   Compiling mpl-token-metadata v1.13.1
error[E0277]: the trait bound `Payload: BorshSerialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:48:10
   |
48 | #[derive(BorshSerialize, BorshDeserialize, Clone, ShankInstruction, Acco...
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshSerialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshSerialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:10
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 2 redundant requirements hidden
   = note: required for `instruction::uses::UseArgs` to implement `borsh::BorshSerialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-9830401964547949897.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshDeserialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:48:26
   |
48 | #[derive(BorshSerialize, BorshDeserialize, Clone, ShankInstruction, Acco...
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshDeserialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshDeserialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:26
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 2 redundant requirements hidden
   = note: required for `instruction::uses::UseArgs` to implement `borsh::BorshDeserialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-16378433754874770819.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshDeserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshSerialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:17:10
   |
17 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshSerialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshSerialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:10
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshSerialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-9830401964547949897.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshDeserialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:17:26
   |
17 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshDeserialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshDeserialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:26
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshDeserialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-16378433754874770819.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshDeserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshSerialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:53:10
   |
53 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshSerialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshSerialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:10
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshSerialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-9830401964547949897.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshDeserialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:53:26
   |
53 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshDeserialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshDeserialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:26
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshDeserialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-16378433754874770819.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshDeserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshSerialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:64:10
   |
64 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshSerialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshSerialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:10
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshSerialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-9830401964547949897.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshDeserialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:64:26
   |
64 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshDeserialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshDeserialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:26
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshDeserialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-16378433754874770819.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshDeserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshSerialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:80:10
   |
80 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshSerialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshSerialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:10
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshSerialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-9830401964547949897.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshDeserialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:80:26
   |
80 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshDeserialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshDeserialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:26
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshDeserialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-16378433754874770819.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshDeserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshSerialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:11:10
   |
11 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshSerialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshSerialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:10
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshSerialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-9830401964547949897.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshDeserialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:11:26
   |
11 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshDeserialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshDeserialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:26
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshDeserialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-16378433754874770819.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshDeserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshSerialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:21:10
   |
21 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshSerialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshSerialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:10
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshSerialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-9830401964547949897.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshDeserialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:21:26
   |
21 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshDeserialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshDeserialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:26
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshDeserialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-16378433754874770819.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshDeserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshSerialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:28:10
   |
28 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshSerialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshSerialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:10
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshSerialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-9830401964547949897.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshDeserialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:28:26
   |
28 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshDeserialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
note: required for `AuthorizationData` to implement `borsh::BorshDeserialize`
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:26
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound introduced in this `derive` macro
59 | pub struct AuthorizationData {
   |            ^^^^^^^^^^^^^^^^^
   = note: 1 redundant requirement hidden
   = note: required for `Option<AuthorizationData>` to implement `borsh::BorshDeserialize`
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-16378433754874770819.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshDeserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshSerialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:10
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |          ^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshSerialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-9830401964547949897.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshSerialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `Payload: BorshDeserialize` is not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:58:26
   |
58 | #[derive(BorshSerialize, BorshDeserialize, PartialEq, Eq, Debug, Clone)]
   |                          ^^^^^^^^^^^^^^^^ unsatisfied trait bound
   |
   = help: the trait `borsh::BorshDeserialize` is not implemented for `mpl_token_auth_rules::payload::Payload`
note: there are multiple different versions of crate `borsh` in the dependency graph
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this is the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:1:5
   |
1  | use borsh::BorshSerialize;
   |     ----- one version of crate `borsh` used here, as a direct dependency of the current crate
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/assertions/collection.rs:1:5
   |
1  | use solana_program::{account_info::AccountInfo, program_error::ProgramEr...
   |     -------------- one version of crate `borsh` used here, as a dependency of crate `solana_program`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-auth-rules-1.5.1/src/payload.rs:57:1
   |
57 | pub struct Payload {
   | ------------------ this type doesn't implement the required trait
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-1.5.7/src/de/mod.rs:36:1
   |
36 | pub trait BorshDeserialize: Sized {
   | --------------------------------- this is the found trait
   = help: you can use `cargo tree` to explore your dependency tree
   = help: see issue #48214
   = note: the full name for the type has been written to '/Users/bfh/Library/CloudStorage/GoogleDrive-collabnonfaablab@gtekglobal.design/My Drive/iTek-Lux-TrustChain-Sovereign-Blockchain/trustchain_nft_anchor/target/release/deps/mpl_token_metadata-382b990f906c11cf.long-type-16378433754874770819.txt'
   = note: consider using `--verbose` to print the full type name to the console
   = note: this error originates in the derive macro `BorshDeserialize` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/bubblegum.rs:33:14
   |
32 |           data: MetadataInstruction::BubblegumSetCollectionSize(SetColle...
   |  _______________-
33 | |             .try_to_vec()
   | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_____________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/burn.rs:57:51
   |
57 |         data: MetadataInstruction::BurnEditionNft.try_to_vec().unwrap(),
   |                                                   ^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 | pub enum MetadataInstruction {
   | ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 | pub enum DelegateArgs {
   | --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 | pub enum MintArgs {
   | ----------------- doesn't satisfy `_: BorshSerialize`
...
65 | pub enum TransferArgs {
   | --------------------- doesn't satisfy `_: BorshSerialize`
...
81 | pub enum UpdateArgs {
   | ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 | pub enum LockArgs {
   | ----------------- doesn't satisfy `_: BorshSerialize`
...
22 | pub enum UnlockArgs {
   | ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 | pub enum UseArgs {
   | ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/burn.rs:98:44
   |
98 |         data: MetadataInstruction::BurnNft.try_to_vec().unwrap(),
   |                                            ^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 | pub enum MetadataInstruction {
   | ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 | pub enum DelegateArgs {
   | --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 | pub enum MintArgs {
   | ----------------- doesn't satisfy `_: BorshSerialize`
...
65 | pub enum TransferArgs {
   | --------------------- doesn't satisfy `_: BorshSerialize`
...
81 | pub enum UpdateArgs {
   | ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 | pub enum LockArgs {
   | ----------------- doesn't satisfy `_: BorshSerialize`
...
22 | pub enum UnlockArgs {
   | ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 | pub enum UseArgs {
   | ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/burn.rs:174:18
    |
173 |               data: MetadataInstruction::Burn(self.args.clone())
    |  ___________________-
174 | |                 .try_to_vec()
    | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/collection.rs:48:14
   |
47 |           data: MetadataInstruction::ApproveCollectionAuthority
   |  _______________-
48 | |             .try_to_vec()
   | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_____________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/collection.rs:83:14
   |
82 |           data: MetadataInstruction::RevokeCollectionAuthority
   |  _______________-
83 | |             .try_to_vec()
   | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_____________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/collection.rs:136:14
    |
135 |           data: MetadataInstruction::SetAndVerifyCollection
    |  _______________-
136 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/collection.rs:187:14
    |
186 |           data: MetadataInstruction::SetAndVerifySizedCollectionItem
    |  _______________-
187 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/collection.rs:221:14
    |
220 |           data: MetadataInstruction::SetCollectionSize(SetCollectionSiz...
    |  _______________-
221 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/collection.rs:267:14
    |
266 |           data: MetadataInstruction::UnverifyCollection
    |  _______________-
267 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/collection.rs:315:14
    |
314 |           data: MetadataInstruction::UnverifySizedCollectionItem
    |  _______________-
315 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/collection.rs:362:53
    |
362 |         data: MetadataInstruction::VerifyCollection.try_to_vec().unwrap(),
    |                                                     ^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  | pub enum MetadataInstruction {
    | ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  | pub enum DelegateArgs {
    | --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  | pub enum MintArgs {
    | ----------------- doesn't satisfy `_: BorshSerialize`
...
65  | pub enum TransferArgs {
    | --------------------- doesn't satisfy `_: BorshSerialize`
...
81  | pub enum UpdateArgs {
    | ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  | pub enum LockArgs {
    | ----------------- doesn't satisfy `_: BorshSerialize`
...
22  | pub enum UnlockArgs {
    | ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  | pub enum UseArgs {
    | ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/collection.rs:406:14
    |
405 |           data: MetadataInstruction::VerifySizedCollectionItem
    |  _______________-
406 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:183:18
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
182 |               data: MetadataInstruction::Delegate(self.args.clone())
    |  ___________________-
183 | |                 .try_to_vec()
    | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:242:18
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
241 |               data: MetadataInstruction::Revoke(self.args.clone())
    |  ___________________-
242 | |                 .try_to_vec()
    | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/edition.rs:31:14
   |
30 |           data: MetadataInstruction::ConvertMasterEditionV1ToV2
   |  _______________-
31 | |             .try_to_vec()
   | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_____________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/edition.rs:71:14
   |
70 |           data: MetadataInstruction::CreateMasterEditionV3(CreateMasterE...
   |  _______________-
71 | |             .try_to_vec()
   | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_____________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/edition.rs:135:10
    |
132 |           data: MetadataInstruction::MintNewEditionFromMasterEditionVia...
    |  _______________-
133 | |             MintNewEditionFromMasterEditionViaTokenArgs { edition },
134 | |         )
135 | |         .try_to_vec()
    | |         -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/escrow.rs:32:10
   |
31 |       let data = MetadataInstruction::CloseEscrowAccount
   |  ________________-
32 | |         .try_to_vec()
   | |         -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/escrow.rs:68:10
   |
67 |       let data = MetadataInstruction::CreateEscrowAccount
   |  ________________-
68 | |         .try_to_vec()
   | |         -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/escrow.rs:118:10
    |
117 |       let data = MetadataInstruction::TransferOutOfEscrow(TransferOutOf...
    |  ________________-
118 | |         .try_to_vec()
    | |         -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/fee.rs:22:44
   |
22 |         data: MetadataInstruction::Collect.try_to_vec().unwrap(),
   |                                            ^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 | pub enum MetadataInstruction {
   | ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 | pub enum DelegateArgs {
   | --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 | pub enum MintArgs {
   | ----------------- doesn't satisfy `_: BorshSerialize`
...
65 | pub enum TransferArgs {
   | --------------------- doesn't satisfy `_: BorshSerialize`
...
81 | pub enum UpdateArgs {
   | ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 | pub enum LockArgs {
   | ----------------- doesn't satisfy `_: BorshSerialize`
...
22 | pub enum UnlockArgs {
   | ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 | pub enum UseArgs {
   | ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/freeze.rs:36:14
   |
35 |           data: MetadataInstruction::FreezeDelegatedAccount
   |  _______________-
36 | |             .try_to_vec()
   | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_____________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/freeze.rs:68:14
   |
67 |           data: MetadataInstruction::ThawDelegatedAccount
   |  _______________-
68 | |             .try_to_vec()
   | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_____________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:497:10
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
484 |           data: MetadataInstruction::CreateMetadataAccountV3(CreateMeta...
    |  _______________-
485 | |             data: DataV2 {
486 | |                 name,
487 | |                 symbol,
...   |
496 | |         })
497 | |         .try_to_vec()
    | |         -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:507:49
    |
54  | pub enum MintArgs {
    | ----------------- doesn't satisfy `_: BorshSerialize`
...
65  | pub enum TransferArgs {
    | --------------------- doesn't satisfy `_: BorshSerialize`
...
81  | pub enum UpdateArgs {
    | ------------------- doesn't satisfy `_: BorshSerialize`
...
507 |         data: MetadataInstruction::PuffMetadata.try_to_vec().unwrap(),
    |                                                 ^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  | pub enum MetadataInstruction {
    | ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  | pub enum DelegateArgs {
    | --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  | pub enum LockArgs {
    | ----------------- doesn't satisfy `_: BorshSerialize`
...
22  | pub enum UnlockArgs {
    | ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  | pub enum UseArgs {
    | ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:525:14
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
524 |           data: MetadataInstruction::RemoveCreatorVerification
    |  _______________-
525 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:542:54
    |
54  | pub enum MintArgs {
    | ----------------- doesn't satisfy `_: BorshSerialize`
...
65  | pub enum TransferArgs {
    | --------------------- doesn't satisfy `_: BorshSerialize`
...
81  | pub enum UpdateArgs {
    | ------------------- doesn't satisfy `_: BorshSerialize`
...
542 |     let data = MetadataInstruction::SetTokenStandard.try_to_vec().unwra...
    |                                                      ^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  | pub enum MetadataInstruction {
    | ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  | pub enum DelegateArgs {
    | --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  | pub enum LockArgs {
    | ----------------- doesn't satisfy `_: BorshSerialize`
...
22  | pub enum UnlockArgs {
    | ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  | pub enum UseArgs {
    | ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:564:49
    |
54  | pub enum MintArgs {
    | ----------------- doesn't satisfy `_: BorshSerialize`
...
65  | pub enum TransferArgs {
    | --------------------- doesn't satisfy `_: BorshSerialize`
...
81  | pub enum UpdateArgs {
    | ------------------- doesn't satisfy `_: BorshSerialize`
...
564 |         data: MetadataInstruction::SignMetadata.try_to_vec().unwrap(),
    |                                                 ^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  | pub enum MetadataInstruction {
    | ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  | pub enum DelegateArgs {
    | --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  | pub enum LockArgs {
    | ----------------- doesn't satisfy `_: BorshSerialize`
...
22  | pub enum UnlockArgs {
    | ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  | pub enum UseArgs {
    | ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:590:10
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
584 |           data: MetadataInstruction::UpdateMetadataAccountV2(UpdateMeta...
    |  _______________-
585 | |             data,
586 | |             update_authority: new_update_authority,
587 | |             primary_sale_happened,
588 | |             is_mutable,
589 | |         })
590 | |         .try_to_vec()
    | |         -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:611:14
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
610 |           data: MetadataInstruction::UpdatePrimarySaleHappenedViaToken
    |  _______________-
611 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:654:18
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
653 |               data: MetadataInstruction::Create(self.args.clone())
    |  ___________________-
654 | |                 .try_to_vec()
    | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:717:18
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
716 |               data: MetadataInstruction::Mint(self.args.clone())
    |  ___________________-
717 | |                 .try_to_vec()
    | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:787:18
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
786 |               data: MetadataInstruction::Transfer(self.args.clone())
    |  ___________________-
787 | |                 .try_to_vec()
    | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:835:18
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
834 |               data: MetadataInstruction::Update(self.args.clone())
    |  ___________________-
835 | |                 .try_to_vec()
    | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:895:18
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
894 |               data: MetadataInstruction::Print(self.args.clone())
    |  ___________________-
895 | |                 .try_to_vec()
    | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:79:18
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
...
78 |               data: MetadataInstruction::Lock(self.args.clone())
   |  ___________________-
79 | |                 .try_to_vec()
   | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_________________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:135:18
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
...
134 |               data: MetadataInstruction::Unlock(self.args.clone())
    |  ___________________-
135 | |                 .try_to_vec()
    | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_________________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:85:14
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
...
84 |           data: MetadataInstruction::ApproveUseAuthority(ApproveUseAutho...
   |  _______________-
85 | |             .try_to_vec()
   | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_____________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:129:14
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
...
128 |           data: MetadataInstruction::RevokeUseAuthority
    |  _______________-
129 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:186:14
    |
29  |   pub enum UseArgs {
    |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
...
185 |           data: MetadataInstruction::Utilize(UtilizeArgs { number_of_us...
    |  _______________-
186 | |             .try_to_vec()
    | |             -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
    | |_____________|
    |
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
    |
50  |   pub enum MetadataInstruction {
    |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
    |
18  |   pub enum DelegateArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
    |
54  |   pub enum MintArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65  |   pub enum TransferArgs {
    |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81  |   pub enum UpdateArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
   ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
    |
12  |   pub enum LockArgs {
    |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22  |   pub enum UnlockArgs {
    |   ------------------- doesn't satisfy `_: BorshSerialize`
    |
    = note: the following trait bounds were not satisfied:
            `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
            `instruction::metadata::MintArgs: borsh::BorshSerialize`
            `instruction::metadata::TransferArgs: borsh::BorshSerialize`
            `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
            `instruction::state::LockArgs: borsh::BorshSerialize`
            `instruction::state::UnlockArgs: borsh::BorshSerialize`
            `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
    |
43  | pub trait BorshSerialize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: items from traits can only be used if the trait is implemented and in scope
    = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
            candidate #1: `borsh::BorshSerialize`
            candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/verification.rs:50:18
   |
49 |               data: MetadataInstruction::Verify(self.args.clone())
   |  ___________________-
50 | |                 .try_to_vec()
   | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_________________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the method `try_to_vec` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/verification.rs:87:18
   |
86 |               data: MetadataInstruction::Unverify(self.args.clone())
   |  ___________________-
87 | |                 .try_to_vec()
   | |                 -^^^^^^^^^^ method cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   | |_________________|
   |
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 |   pub enum MetadataInstruction {
   |   ---------------------------- method `try_to_vec` not found for this enum because it doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 |   pub enum DelegateArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 |   pub enum MintArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
65 |   pub enum TransferArgs {
   |   --------------------- doesn't satisfy `_: BorshSerialize`
...
81 |   pub enum UpdateArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 |   pub enum LockArgs {
   |   ----------------- doesn't satisfy `_: BorshSerialize`
...
22 |   pub enum UnlockArgs {
   |   ------------------- doesn't satisfy `_: BorshSerialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 |   pub enum UseArgs {
   |   ---------------- doesn't satisfy `instruction::uses::UseArgs: borsh::BorshSerialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshSerialize`
           `instruction::metadata::MintArgs: borsh::BorshSerialize`
           `instruction::metadata::TransferArgs: borsh::BorshSerialize`
           `instruction::metadata::UpdateArgs: borsh::BorshSerialize`
           `instruction::state::LockArgs: borsh::BorshSerialize`
           `instruction::state::UnlockArgs: borsh::BorshSerialize`
           `instruction::uses::UseArgs: borsh::BorshSerialize`
note: the trait `borsh::BorshSerialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/ser/mod.rs:43:1
   |
43 | pub trait BorshSerialize {
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_to_vec`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshSerialize`
           candidate #2: `borsh::ser::BorshSerialize`

error[E0599]: the variant or associated item `try_from_slice` exists for enum `MetadataInstruction`, but its trait bounds were not satisfied
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/processor/mod.rs:90:50
   |
90 |     let instruction = match MetadataInstruction::try_from_slice(input) {
   |                                                  ^^^^^^^^^^^^^^ variant or associated item cannot be called on `MetadataInstruction` due to unsatisfied trait bounds
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/mod.rs:50:1
   |
50 | pub enum MetadataInstruction {
   | ---------------------------- variant or associated item `try_from_slice` not found for this enum because it doesn't satisfy `_: BorshDeserialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/delegate.rs:18:1
   |
18 | pub enum DelegateArgs {
   | --------------------- doesn't satisfy `_: BorshDeserialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/metadata.rs:54:1
   |
54 | pub enum MintArgs {
   | ----------------- doesn't satisfy `_: BorshDeserialize`
...
65 | pub enum TransferArgs {
   | --------------------- doesn't satisfy `_: BorshDeserialize`
...
81 | pub enum UpdateArgs {
   | ------------------- doesn't satisfy `_: BorshDeserialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/state.rs:12:1
   |
12 | pub enum LockArgs {
   | ----------------- doesn't satisfy `_: BorshDeserialize`
...
22 | pub enum UnlockArgs {
   | ------------------- doesn't satisfy `_: BorshDeserialize`
   |
  ::: /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/instruction/uses.rs:29:1
   |
29 | pub enum UseArgs {
   | ---------------- doesn't satisfy `_: BorshDeserialize`
   |
   = note: the following trait bounds were not satisfied:
           `instruction::delegate::DelegateArgs: borsh::BorshDeserialize`
           `instruction::metadata::MintArgs: borsh::BorshDeserialize`
           `instruction::metadata::TransferArgs: borsh::BorshDeserialize`
           `instruction::metadata::UpdateArgs: borsh::BorshDeserialize`
           `instruction::state::LockArgs: borsh::BorshDeserialize`
           `instruction::state::UnlockArgs: borsh::BorshDeserialize`
           `instruction::uses::UseArgs: borsh::BorshDeserialize`
note: the trait `borsh::BorshDeserialize` must be implemented
  --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/borsh-0.9.3/src/de/mod.rs:30:1
   |
30 | pub trait BorshDeserialize: Sized {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: items from traits can only be used if the trait is implemented and in scope
   = note: the following traits define an item `try_from_slice`, perhaps you need to implement one of them:
           candidate #1: `borsh::BorshDeserialize`
           candidate #2: `borsh::de::BorshDeserialize`
           candidate #3: `borsh::de::BorshDeserialize`

error[E0277]: the trait bound `T: borsh::de::BorshDeserialize` is not satisfied
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mpl-token-metadata-1.13.1/src/utils/mod.rs:176:21
    |
176 |     let result: T = try_from_slice_unchecked(data)?;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `borsh::de::BorshDeserialize` is not implemented for `T`
    |
note: required by a bound in `solana_program::borsh::try_from_slice_unchecked`
   --> /Users/bfh/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/solana-program-1.18.26/src/borsh.rs:39:36
    |
39  | ...m_slice_unchecked<T: BorshDeserialize>(data: &[u8]) -> Result<T, Err...
    |                         ^^^^^^^^^^^^^^^^ required by this bound in `try_from_slice_unchecked`
help: consider further restricting type parameter `T` with trait `BorshDeserialize`
    |
167 | pub fn try_from_slice_checked<T: TokenMetadataAccount + borsh::de::BorshDeserialize>(
    |                                                       +++++++++++++++++++++++++++++

Some errors have detailed explanations: E0277, E0599.
For more information about an error, try `rustc --explain E0277`.
error: could not compile `mpl-token-metadata` (lib) due to 63 previous errors
warning: build failed, waiting for other jobs to finish...
bfh@BFHs-MacBook-Pro:trustchain_nft_anchor % 
